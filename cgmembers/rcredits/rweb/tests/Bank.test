<?php
//
// Feature: Bank
//   AS a member
//   I WANT to transfer funds from my bank account to my rCredits account or vice versa
//   SO I can get money in and out of my rCredits account.

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebBank extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Bank';
  const FEATURE_NAME = 'rweb Test - Bank';
  const DESCRIPTION = 'Bank';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName | flags   | risks   |'
    . '\\| .ZZA | A Mem    | ok,bona | hasBank |'
    . '\\| .ZZB | B Mem    | ok,bona |         |'
    . '\\| .ZZC | C Mem    | ok,bona |         |'
    . '\\| .ZZD | D Mem    | ok,bona |         |"');
    And__('transactions: "ASSOC'
    . '\\| xid | created   | type     | amount | from | to   | purpose |'
    . '\\| 1   | %today-7m | signup   |    100 | ctty | .ZZA | signup  |'
    . '\\| 2   | %today-7m | signup   |    100 | ctty | .ZZB | signup  |'
    . '\\| 3   | %today-7m | signup   |    100 | ctty | .ZZC | signup  |'
    . '\\| 4   | %today-7m | signup   |    100 | ctty | .ZZD | signup  |'
    . '\\| 8   | %today    | transfer |     80 | .ZZD | .ZZA | gift    |"');
    break;


    }
  }

  // Scenario: A member transfers funds from the bank
  public function testAMemberTransfersFundsFromTheBank_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "get" with values: "ASSOC'
    . '\\| amount | op  |'
    . '\\|     40 | get |"');
    Then_('we say "status": "banked" with subs: "ASSOC'
    . '\\| action     | amount |'
    . '\\| draw from  | $40    |"');
    And__('usd transfers: "ASSOC'
    . '\\| payer | payee | amount |'
    . '\\| .ZZA  |     0 |    -40 |"');
  }

  // Scenario: A member transfers funds to the bank
  public function testAMemberTransfersFundsToTheBank_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "get" with values: "ASSOC'
    . '\\| amount | op  |'
    . '\\|     40 | put |"');
    Then_('we say "status": "banked" with subs: "ASSOC'
    . '\\| action     | amount |'
    . '\\| deposit to | $40    |"');
    And__('usd transfers: "ASSOC'
    . '\\| payer | payee | amount |'
    . '\\| .ZZA  |     0 |     40 |"');
  }

}
<?php
//
// Feature: Exchange
//   AS a member
//   I WANT to trade rCredits for another member's USD or exchange of US Dollars or other currency
//   SO I can buy stuff I can't buy with rCredits.
//   OR I WANT to trade exchange of US Dollars or other currency for another member's rCredits
//   SO I can buy more with rCredits and get incentive rewards.

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebExchange extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Exchange';
  const FEATURE_NAME = 'rweb Test - Exchange';
  const DESCRIPTION = 'Exchange';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    global $testModule; $testModule = self::MODULE;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName   | address | city  | state  | postalCode | country | postalAddr | rebate | flags      |'
    . '\\| .ZZA | Abe One    | 1 A St. | Atown | AL | 01000   | US      | 1 A, A, AK |      5 | ok,confirmed,bona    |'
    . '\\| .ZZB | Bea Two    | 2 B St. | Btown | UT | 02000   | US      | 2 B, B, UT |     10 | ok,confirmed,bona    |'
    . '\\| .ZZC | Corner Pub | 3 C St. | Ctown | Cher |       | France  | 3 C, C, FR |     10 | ok,confirmed,co,bona |"');
    And__('relations: "ASSOC'
    . '\\| main | agent | permission |'
    . '\\| .ZZA | .ZZB  | buy        |'
    . '\\| .ZZB | .ZZA  | read       |'
    . '\\| .ZZC | .ZZB  | buy        |'
    . '\\| .ZZC | .ZZA  | sell       |"');
    And__('transactions: "ASSOC'
    . '\\| xid | created   | type   | amount | from | to   | purpose | taking |'
    . '\\|   1 | %today-6m | signup |    250 | ctty | .ZZA | signup  | 0      |'
    . '\\|   2 | %today-6m | signup |    250 | ctty | .ZZB | signup  | 0      |'
    . '\\|   3 | %today-6m | signup |    250 | ctty | .ZZC | signup  | 0      |'
    . '\\|   4 | %today-6m | grant  |    200 | ctty | .ZZA | heroism | 0      |"');
    Then_('balances: "ASSOC'
    . '\\| id   |    r |'
    . '\\| ctty | -950 |'
    . '\\| .ZZA |  450 |'
    . '\\| .ZZB |  250 |'
    . '\\| .ZZC |  250 |"');
    break;


    }
  }

  // Scenario: A member asks to charge another member
  public function testAMemberAsksToChargeAnotherMember_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "charge" with values: "ASSOC'
    . '\\| op     | who     | amount | goods      | purpose |'
    . '\\| charge | Bea Two | 100    | %FOR_USD | cash    |"');
    Then_('we show "confirm charge" with subs: "ASSOC'
    . '\\| amount | otherName | why         |'
    . '\\| $100   | Bea Two   | exchange of US Dollars or other currency |"');
  }

  // Scenario: A member confirms request to charge another member
  public function testAMemberConfirmsRequestToChargeAnotherMember_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" confirms form "charge" with values: "ASSOC'
    . '\\| op     | who     | amount | goods      | purpose |'
    . '\\| charge | Bea Two | 100    | %FOR_USD | paper   |"');
    Then_('we say "status": "report tx|balance unchanged" with subs: "ASSOC'
    . '\\| did     | otherName | amount | why         |'
    . '\\| charged | Bea Two   | $100   | exchange of US Dollars or other currency |"');
    And__('we message "new invoice" to member ".ZZB" with subs: "ASSOC'
    . '\\| otherName | amount | purpose |'
    . '\\| Abe One   | $100   | paper   |"');
    And__('invoices: "ASSOC'
    . '\\| nvid | created | status      | amount | goods      | from | to   | for   |'
    . '\\|    1 | %today  | %TX_PENDING |    100 | %FOR_USD | .ZZB | .ZZA | paper |"');
    And__('balances: "ASSOC'
    . '\\| id   |    r |'
    . '\\| ctty | -950 |'
    . '\\| .ZZA |  450 |'
    . '\\| .ZZB |  250 |'
    . '\\| .ZZC |  250 |"');
  }

  // Scenario: A member asks to pay another member
  public function testAMemberAsksToPayAnotherMember_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "pay" with values: "ASSOC'
    . '\\| op  | who     | amount | goods      | purpose |'
    . '\\| pay | Bea Two | 100    | %FOR_USD | paper   |"');
    Then_('we show "confirm payment" with subs: "ASSOC'
    . '\\| amount | otherName | why         |'
    . '\\| $100   | Bea Two   | exchange of US Dollars or other currency |"');
  }

  // Scenario: A member confirms request to pay another member
  public function testAMemberConfirmsRequestToPayAnotherMember_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" confirms form "pay" with values: "ASSOC'
    . '\\| op  | who     | amount | goods      | purpose |'
    . '\\| pay | Bea Two | 100    | %FOR_USD | paper   |"');
    Then_('we say "status": "report tx" with subs: "ASSOC'
    . '\\| did    | otherName | amount | why         |'
    . '\\| paid   | Bea Two   | $100   | exchange of US Dollars or other currency |"');
    And__('we notice "new payment" to member ".ZZB" with subs: "ASSOC'
    . '\\| created | fullName | otherName | amount | payeePurpose |'
    . '\\| %today  | Bea Two  | Abe One   | $100   | paper        |"');
    And__('transactions: "ASSOC'
    . '\\| xid | created | type     | amount | from  | to   | goods      | purpose      | taking |'
    . '\\|   5 | %today  | transfer |    100 | .ZZA  | .ZZB | %FOR_USD | paper        | 0      |"');
    And__('balances: "ASSOC'
    . '\\| id   |    r |'
    . '\\| ctty | -950 |'
    . '\\| .ZZA |  350 |'
    . '\\| .ZZB |  350 |'
    . '\\| .ZZC |  250 |"');
  }

  // Scenario: A member asks to cash out too much
  public function testAMemberAsksToCashOutTooMuch_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "pay" with values: "ASSOC'
    . '\\| op  | who     | amount | goods      | purpose |'
    . '\\| pay | Bea Two | 300    | %FOR_USD | paper   |"');
    Then_('we say "error": "short to|increase min|short cash help|maybe not cash" with subs: "ASSOC'
    . '\\| short |'
    . '\\| $100  |"');
  }

}
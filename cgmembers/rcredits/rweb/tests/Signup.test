<?php
//
// Feature: A user signs up for rCredits
//   AS a newbie
//   I WANT to get access to the rCredits Participants section
//   SO I can start pretending

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebSignup extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Signup';
  const FEATURE_NAME = 'rweb Test - Signup';
  const DESCRIPTION = 'A user signs up for rCredits';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('member is logged out');
    break;


    }
  }

  // Scenario: A newbie visits the registration page with no invite
  public function testANewbieVisitsTheRegistrationPageWithNoInvite_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invitation to email "a@example.com" is ""');
    When_('member "?" visits page "/user/register"');
    Then_('we show page "/user/register" with: "DATA'
    . '\\| errorPhrase         |'
    . '\\| you must be invited |"');
  }

  // Scenario: An invited newbie visits the registration page
  public function testAnInvitedNewbieVisitsTheRegistrationPage_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invitation to email "a@example.com" is "s0M3_rAnd0M_c0D3"');
    When_('member "?" visits page "/user/register/code=s0M3_rAnd0M_c0D3"');
    Then_('we show page "/user/register" with: "DATA'
    . '\\| nameDescription      |'
    . '\\| properly capitalized |"');
  }

  // Scenario: A newbie registers
  public function testANewbieRegisters_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invitation to email "a@example.com" is "s0M3_rAnd0M_c0D3"');
    When_('member "?" confirms form "/user/register/code=s0M3_rAnd0M_c0D3" with values: "DATA'
    . '\\| fullName | email         | country | postalCode | state | city  | acctType | code        |'
    . '\\| Abe One   | a@example.com | US    | 01001       | MA    | Amherst | %R_PERSONAL  | s0M3_rAnd0M_c0D3 |"');
    Then_('members: "DATA'
    . '\\| id      | fullName | email         | country | postalCode | state | city    | flags |'
    . '\\| NEW.AAB | Abe One   | a@example.com | US | 01001       | MA    | Amherst | dft,personal |"');
    And__('we say "status": "your account is ready" with subs: "DATA'
    . '\\| quid    | balance |'
    . '\\| NEW.AAB | $250    |"');
    And__('we email "welcome" to member "a@example.com" with subs: "DATA'
    . '\\| fullName | name   | quid    | region | pass     |'
    . '\\| Abe One  | abeone | NEW.AAB | new    | (varies) |"');
    And__('we show page "/user/login" with: "DATA'
    . '\\| title          |'
    . '\\| rCredits Login |"');
  }

  // Scenario: A member registers bad email
  public function testAMemberRegistersBadEmail_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invitation to email "a@example.com" is "s0M3_rAnd0M_c0D3"');
    When_('member "?" confirms form "/user/register/code=s0M3_rAnd0M_c0D3" with values: "DATA'
    . '\\| fullName | email     | country | postalCode | state | city    | acctType | code |'
    . '\\| Abe One   | %whatever | US      | 01001       | MA    | Amherst | %R_PERSONAL  | s0M3_rAnd0M_c0D3 |"');
    Then_('we say "error": "bad email" with subs: "DATA'
    . '\\| email     |'
    . '\\| %whatever |"');
  }

  // Scenario: A member registers again
  public function testAMemberRegistersAgain_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invitation to email "a@example.com" is "s0M3_rAnd0M_c0D3"');
    Given('members: "DATA'
    . '\\| id      | fullName  | phone  | email         | city  | state | country |'
    . '\\| NEW.ZZA | Abe One    | +20001 | a@example.com | Atown | AK    | US      |"');
    When_('member "?" confirms form "/user/register/code=s0M3_rAnd0M_c0D3" with values: "DATA'
    . '\\| fullName | email         | country | postalCode | state | city    | acctType | code |'
    . '\\| Bea Two   | a@example.com | US      | 01001       | MA    | Amherst | %R_PERSONAL | s0M3_rAnd0M_c0D3 |"');
    Then_('we say "error": "duplicate email|forgot password" with subs: "DATA'
    . '\\| duplicateAccount | emailTagged            | passwordLink                            |'
    . '\\| Abe One          | a+whatever@example.com | %BASE_PATHuser/password/a%40example.com |"');
  }

}
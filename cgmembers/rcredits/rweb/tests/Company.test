<?php
//
// Feature: Company Information
//   AS a company member
//   I WANT to update my company information
//   SO I can complete my registration and/or publicize my goods and services to other rCredits members.

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebCompany extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Company';
  const FEATURE_NAME = 'rweb Test - Company';
  const DESCRIPTION = 'Company Information';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    global $testModule; $testModule = self::MODULE;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName | flags |'
    . '\\| .ZZA | Abe One  |       |'
    . '\\| .ZZC | Our Pub  | co,ok |"');
    And__('relations: "ASSOC'
    . '\\| id   | main | agent | permission |'
    . '\\| :ZZA | .ZZC | .ZZA  | manage     |"');
    break;


    }
  }

  // Scenario: A member visits the company info page
  public function testAMemberVisitsTheCompanyInfoPage_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ":ZZA" visits page "settings/company"');
    Then_('we show "Company Information" with: "ARRAY'
    . '\\|_rCredits page | rCredits web page |'
    . '\\| Company name  | Our Pub |"');
  }

  // Scenario: A member updates company info
  public function testAMemberUpdatesCompanyInfo_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ":ZZA" confirms form "settings/company" with values: "ASSOC'
    . '\\| private | selling | website     | description   | employees | gross | tips |'
    . '\\|         | stuff   | www.pub.com | we do vittles |         2 |   100 |    1 |"');
    Then_('members: "ASSOC'
    . '\\| id   | selling | website     | description   | employees | gross | coFlags       |'
    . '\\| .ZZC | stuff   | www.pub.com | we do vittles |         2 |   100 | %(1<<%CO_TIP) |"');
    And__('we say "status": "options saved"');
  }

  // Scenario: A member gives a bad employee count
  public function testAMemberGivesABadEmployeeCount_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ":ZZA" confirms form "settings/company" with values: "ASSOC'
    . '\\| selling | website     | description   | employees | gross |'
    . '\\| stuff   | www.pub.com | we do vittles |        -2 |   100 |"');
    Then_('we say error in field "employees": "negative amount"');
  }

  // Scenario: A member gives a bad gross
  public function testAMemberGivesABadGross_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ":ZZA" confirms form "settings/company" with values: "ASSOC'
    . '\\| selling | website     | description   | employees | gross |'
    . '\\| stuff   | www.pub.com | we do vittles |         2 |  junk |"');
    Then_('we say error in field "gross": "bad amount"');
  }

}
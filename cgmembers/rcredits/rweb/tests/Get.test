<?php
//
// Feature: Get rCredits/USD
//   AS a member
//   I WANT to transfer credit to my bank account
//   SO I can pay it to non-members
//   OR
//   I WANT to transfer credit from my bank account
//   SO I can spend it through the rCredits system or hold it in the rCredits system as savings.

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebGet extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Get';
  const FEATURE_NAME = 'rweb Test - Get';
  const DESCRIPTION = 'Get rCredits/USD';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName | floor | minimum | flags      |'
    . '\\| .ZZA | Abe One  |     0 |      10 | ok,dw,bank |'
    . '\\| .ZZB | Bea Two  |     0 |      10 | ok,dw,bank |'
    . '\\| .ZZC | Our Pub  |     0 |     100 | co,ok,dw   |'
    . '\\| .ZZD | Dee Four |     0 |     100 | ok,dw,bank |"');
    And__('transactions: "ASSOC'
    . '\\| xid | created    | type   | amount | from | to   | purpose |'
    . '\\| 1   | %today-10d | signup |     20 | ctty | .ZZA | signup  |'
    . '\\| 2   | %today-10d | grant  |    100 | ctty | .ZZB | grant   |'
    . '\\| 3   | %today-10d | signup |     10 | ctty | .ZZC | signup  |'
    . '\\| 4   | %today-10d | signup |     20 | ctty | .ZZD | signup  |"');
    And__('usd transfers: "ASSOC'
    . '\\| payer | payee | amount | tid | created   | completed |'
    . '\\|  .ZZA |     0 |    -99 |   1 | %today-7d | %today-5d |'
    . '\\|  .ZZA |     0 |   -100 |   2 | %today-5d |         0 |'
    . '\\|  .ZZA |  .ZZB |      4 |   0 | %today-3d | %today-3d |'
    . '\\|  .ZZC |  .ZZA |     18 |   0 | %today-3d | %today-3d |'
    . '\\|  .ZZA |     0 |     13 |   3 | %today-2d | %today-2d |'
    . '\\|  .ZZB |     0 |      4 |   1 | %today-2d | %today-2d |'
    . '\\|  .ZZC |     0 |    -30 |   1 | %today-2d | %today-2d |'
    . '\\|  .ZZD |     0 |   -140 |   1 | %today-2d | %today-2d |'
    . '\\|  .ZZC |  ctty |     10 |   2 | %today-2d | %today-2d |"');
    Then_('balances: "ASSOC'
    . '\\| id   | r    | usd | rewards |'
    . '\\| ctty | -160 |  10 |       0 |'
    . '\\| .ZZA |    6 | 100 |      20 |'
    . '\\| .ZZB |   96 |   0 |       0 |'
    . '\\| .ZZC |   38 |   2 |      10 |'
    . '\\| .ZZD |   20 | 140 |      20 |"');
    break;


    }
  }

  // Scenario: a member moves credit to the bank
  public function testAMemberMovesCreditToTheBank_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "get" with values: "ASSOC'
    . '\\| op  | amount |'
    . '\\| put |     86 |"');
    Then_('usd transfers: "ASSOC'
    . '\\| payer | payee | amount | tid | created   | completed |'
    . '\\|  .ZZA |     0 |     86 |   4 | %today    | %today    |"');
    And__('we say "status": "banked" with subs: "ASSOC'
    . '\\| action     | amount |'
    . '\\| deposit to | $86    |"');
    And__('balances: "ASSOC'
    . '\\| id   | usd | r |'
    . '\\| .ZZA |  14 | 6 |"');
  }

  // Scenario: a member draws credit from the bank
  public function testAMemberDrawsCreditFromTheBank_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZB" completes form "get" with values: "ASSOC'
    . '\\| op  | amount      |'
    . '\\| get | %R_ACHMIN |"');
    Then_('usd transfers: "ASSOC'
    . '\\| payer | payee | amount       | tid | created | completed |'
    . '\\|  .ZZB |     0 | -%R_ACHMIN |   2 | %today  |         0 |"');
    And__('we say "status": "banked" with subs: "ASSOC'
    . '\\| action     | amount       |'
    . '\\| draw from  | $%R_ACHMIN |"');
  }

  // Scenario: a member moves too little to the bank
  public function testAMemberMovesTooLittleToTheBank_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "get" with values: "ASSOC'
    . '\\| op  | amount           |'
    . '\\| put | %(%R_ACHMIN-.01) |"');
    Then_('we say "error": "bank too little"');
  }

  // Scenario: a member tries to cash out rewards and/or pending withdrawals
  public function testAMemberTriesToCashOutRewardsAndorPendingWithdrawals_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" completes form "get" with values: "ASSOC'
    . '\\| op  | amount |'
    . '\\| put |     87 |"');
    Then_('we say "error": "short put" with subs: "ASSOC'
    . '\\| max |'
    . '\\| $86 |"');
  }

  // Scenario: a member moves inconveniently much to the bank
  public function testAMemberMovesInconvenientlyMuchToTheBank_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZB" completes form "get" with values: "ASSOC'
    . '\\| op  | amount |'
    . '\\| put |    200 |"');
    Then_('we say "error": "short put" with subs: "ASSOC'
    . '\\| max              |'
    . '\\| $%(3*%R_CHUNK+2) |"');
  }

  // Scenario: a member tries to go below their minimum
  public function testAMemberTriesToGoBelowTheirMinimum_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZD" completes form "get" with values: "ASSOC'
    . '\\| op  | amount |'
    . '\\| put |     61 |"');
    Then_('we say "error": "change min first"');
  }

  // Scenario: a member asks to do two transfers out in one day
  public function testAMemberAsksToDoTwoTransfersOutInOneDay_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('usd transfers: "ASSOC'
    . '\\| payer | payee | amount | tid | created   |'
    . '\\|  .ZZD |     0 |      6 |   0 | %today    |"');
    When_('member ".ZZD" completes form "get" with values: "ASSOC'
    . '\\| op  | amount |'
    . '\\| put |     10 |"');
    Then_('we show "Bank Transfer" with: "ARRAY'
    . '\\|_Pending |'
    . '\\| You have total pending transfer requests of $6 to your bank account. |"');
    And__('we say "error": "short put" with subs: "ASSOC'
    . '\\| max |'
    . '\\| $0  |"');
  }

}
<?php
//
// Feature: A user opens an rCredits company account
//   AS a member
//   I WANT to open an rCredits company account
//   SO my company can accept rCredits payments

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebSignupCo extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'SignupCo';
  const FEATURE_NAME = 'rweb Test - SignupCo';
  const DESCRIPTION = 'A user opens an rCredits company account';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName | email | postalCode | federalId   | phone        | flags |'
    . '\\| .ZZA | Abe One  | a@    | 01330      | 111-22-0001 | +14136280000 | ok    |'
    . '\\| .ZZC | Our Pub  | c@    | 01301      | 111-22-3334 | +14136280003 | ok    |"');
    And__('relations: "ASSOC'
    . '\\| id   | main | agent | permission |'
    . '\\| :ZZA | .ZZC | .ZZA  | manage     |"');
    break;


    }
  }

  // Scenario: A member registers a company
  public function testAMemberRegistersACompany_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ".ZZA" confirms form "signup-company" with values: "ASSOC'
    . '\\| relation | flow |'
    . '\\|        0 |    0 |"');
    Then_('signup args: "ASSOC'
    . '\\| personal | isOwner | employeeOk | flow | helper  | fullName | phone |'
    . '\\|        0 |       1 |          1 |    0 | NEW.ZZA |          |       |"');
    And__('we show "Open a Company Account" with: "ARRAY'
    . '\\|_nameDescription      |'
    . '\\| properly capitalized |"');
    And__('with: "ARRAY'
    . '\\|_acctType            |'
    . '\\| partnership         |'
    . '\\| private corporation |"');
    Given('invitation to email "a@" from member ".ZZC" is "c0D3"');
    When_('member "?" confirms form "signup/code=c0D3&helper=NEW.ZZA&flow=0&isOwner=1&employeeOk=1" with values: "ASSOC'
    . '\\| fullName | email       | phone | postalCode | federalId   | acctType        | company  | companyPhon | companyOptions | address | city    | state | postalAddr                 | tenure | owns |'
    . '\\| AAAme Co | aco@ | 413-253-9876 | 01002      | 111-22-0001 | %CO_CORPORATION | | | | 1 A ST. | amherst | MA    | 1 A ST., Amherst, MA 01001 |     18 |    1 |"');
    Then_('members: "ASSOC'
    . '\\| id   | fullName | email | postalCode | phone        | city    | flags        | floor | helper |'
    . '\\| .AAA | AAAme Co | aco@  | 01002      | +14132539876 | Amherst | co,confirmed |     0 | .ZZA   |"');
    And__('relations: "ASSOC'
    . '\\| id   | main | agent | permission | employee | isOwner | draw |'
    . '\\| :AAA | .AAA | .ZZA  | manage     |        1 |       1 |    0 |"');
    And__('balances: "ASSOC'
    . '\\| id   | r | usd | rewards |'
    . '\\| .AAA | 0 |   0 |       0 |"');
    And__('we say "status": "company is ready"');
  }

  // Scenario: A member registers a company while managing another account
  public function testAMemberRegistersACompanyWhileManagingAnotherAccount_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member ":ZZA" confirms form "signup-company" with values: "ASSOC'
    . '\\| relation | flow |'
    . '\\|        0 |    0 |"');
    Then_('signup args: "ASSOC'
    . '\\| personal | isOwner | employeeOk | flow | helper  | fullName | phone |'
    . '\\|        0 |       1 |          1 |    0 | NEW.ZZA |          |       |"');
  }

  // Scenario: A member registers a company, having given company info
  public function testAMemberRegistersACompanyHavingGivenCompanyInfo_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('member ".ZZA" has company info: "ASSOC'
    . '\\| company | companyPhone | isOwner | employeeOk |'
    . '\\| Acme Co | +14132222222 |       1 |          0 |"');
    When_('member ".ZZA" confirms form "signup-company" with values: "ASSOC'
    . '\\| relation | flow |'
    . '\\|        1 |    0 |"');
    Then_('signup args: "ASSOC'
    . '\\| personal | isOwner | employeeOk | flow | helper  | fullName | phone        |'
    . '\\|        0 |       0 |          0 |    0 | NEW.ZZA | Acme Co  | +14132222222 |"');
  }

}
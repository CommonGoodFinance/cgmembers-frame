<?php
//
// Feature: Scan Card
//   AS a member
//   I WANT to use my rCard to make payments
//   SO I can easily buy stuff through the rCredits system.
//   AND
//   AS a member company
//   I WANT to scan customer rCards
//   SO I can charge them easily through the rCredits system.
//   AND
//   AS an agent of a member company
//   I WANT to scan in using my company rCard
//   SO I don't have to type my account ID or remember my password.

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebScanCard extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'ScanCard';
  const FEATURE_NAME = 'rweb Test - ScanCard';
  const DESCRIPTION = 'Scan Card';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "DATA'
    . '\\| id   | fullName   | address | city  | state  | postalCode | country | email         | flags                |'
    . '\\| .ZZA | Abe One    | 1 A St. | Atown | Alaska | 01000      | US      | a@ | dft,ok,person,bona |'
    . '\\| .ZZB | Bea Two    | 2 B St. | Btown | Utah   | 02000      | US      | b@ | dft,ok,person,bona |'
    . '\\| .ZZC | Corner Pub | 3 C St. | Ctown | Cher   |            | France  | c@ | dft,ok,company,bona  |"');
    And__('relations: "DATA'
    . '\\| id   | main | agent | permission |'
    . '\\| :ZZA | .ZZA | .ZZB  | buy        |'
    . '\\| :ZZB | .ZZB | .ZZA  | read       |'
    . '\\| :ZZC | .ZZC | .ZZB  | buy        |'
    . '\\| :ZZD | .ZZC | .ZZA  | sell       |"');
    And__('transactions: "DATA'
    . '\\| xid | created   | type   | amount | from | to   | purpose | taking |'
    . '\\|   1 | %today-6m | signup |    250 | ctty | .ZZA | signup  | 0      |'
    . '\\|   2 | %today-6m | signup |    250 | ctty | .ZZB | signup  | 0      |'
    . '\\|   3 | %today-6m | signup |    250 | ctty | .ZZC | signup  | 0      |"');
    And__('balances: "DATA'
    . '\\| id   | usd  |'
    . '\\| ctty | 1000 |'
    . '\\| .ZZA |  100 |'
    . '\\| .ZZB |  200 |'
    . '\\| .ZZC |  300 |"');
    Then_('balances: "DATA'
    . '\\| id   | r    |'
    . '\\| ctty | -750 |'
    . '\\| .ZZA |  250 |'
    . '\\| .ZZB |  250 |'
    . '\\| .ZZC |  250 |"');
    break;


    }
  }

  // Scenario: A member uses an rCard to pay
  public function testAMemberUsesAnRCardToPay_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('member ".ZZB" card code is "WhAt3v3r"');
    When_('member ":ZZD" visits page "I/ZZB.WhAt3v3r"');
    Then_('we show "Bea Two" with: "DATA'
    . '\\| Location  | Button |'
    . '\\| Btown, UT | Charge |"');
  }

  // Scenario: A company agent uses an rCard to pay
  public function testACompanyAgentUsesAnRCardToPay_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('agent ".ZZB" card code is "WhAt3v3r"');
    And__('member ":ZZD" visits page "I/ZZA-WhAt3v3r"');
    Then_('we show "Bea Two" with: "DATA'
    . '\\| Company | Location  | Button |'
    . '\\| Abe One | Atown, AK | Charge |"');
  }

  // Scenario: Cashier charges rCard
  public function testCashierChargesRCard_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('member ".ZZB" card code is "WhAt3v3r"');
    And__('member ":ZZD" visits page "I/ZZB.WhAt3v3r"');
    When_('member ":ZZD" confirms form "charge/scanned=1&who=NEW.ZZB" with values: "DATA'
    . '\\| op     | who     | amount | goods | purpose | scanned |'
    . '\\| charge | Bea Two | 100    | 1     | labor   | 1       |"');
    Then_('we say "status": "report invoice" with subs: "DATA'
    . '\\| did     | otherName | amount | tid |'
    . '\\| charged | Bea Two   | $100   | 2   |"');
    And__('we say "status": "to scan another"');
  }

  // Scenario: A member uses an OLD rCard to pay
  public function testAMemberUsesAnOLDRCardToPay_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('member ".ZZB" card code is "WhAt3v3r"');
    When_('member ":ZZD" visits page "I/NEW.ZZB-WhAt3v3r"');
    Then_('we show "Bea Two" with: "DATA'
    . '\\| Location  | Button |'
    . '\\| Btown, UT | Charge |"');
  }

  // Scenario: A company agent uses an OLD rCard to pay
  public function testACompanyAgentUsesAnOLDRCardToPay_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('agent ".ZZB" card code is "WhAt3v3r"');
    And__('member ":ZZD" visits page "I/NEW-ZZA-WhAt3v3r"');
    Then_('we show "Bea Two" with: "DATA'
    . '\\| Company | Location  | Button |'
    . '\\| Abe One | Atown, AK | Charge |"');
  }

}
<?php
//
// Feature: Real USD
//   AS a member
//   I WANT my rCredits transaction history to reflect accurately my Dwolla balance
//   SO I don't lose money or get confused.

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rweb.steps';

class rwebRealUsd extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'RealUsd';
  const FEATURE_NAME = 'rweb Test - RealUsd';
  const DESCRIPTION = 'Real USD';
  const MODULE = 'rweb';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rweb.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "DATA'
    . '\\| id      | fullName   | dwolla             | country | email         | flags           |'
    . '\\| NEW.ZZA | Abe One    | %DW_TESTER_ACCOUNT | US      | a@example.com | dft,ok,personal |'
    . '\\| NEW.ZZB | Bea Two    | %DW_TEST_ACCOUNT   | US      | b@example.com | dft,ok,personal |"');
    And__('transactions: "DATA'
    . '\\| tx_id    | created   | type       | amount | from      | to      | purpose | taking |'
    . '\\| NEW.AAAB | %today-6m | %TX_SIGNUP |     10 | community | NEW.ZZA | signup  | 0      |"');
    And__('usd: "DATA'
    . '\\| id        | usd   |'
    . '\\| NEW.ZZA   | +AMT1 |"');
    break;


    }
  }

  // Scenario: A mixed rCredits/USD transaction happens
  public function testAMixedRCreditsUSDTransactionHappens_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('member "NEW.ZZA" confirms form "pay" with values: "DATA'
    . '\\| op  | who     | amount | goods | purpose |'
    . '\\| pay | Bea Two | 10.20  | 1     | labor   |"');
    Then_('transactions: "DATA'
    . '\\| tx_id    | type         | state    | amount | r    | from      | to      | purpose      | taking |'
    . '\\| NEW:AAAC | %TX_TRANSFER | %TX_DONE |  10.20 |   10 | NEW.ZZA   | NEW.ZZB | labor        | 0      |'
    . '\\| NEW:AAAD | %TX_REBATE   | %TX_DONE |    .50 |  .50 | community | NEW.ZZA | rebate on #2 | 0      |'
    . '\\| NEW:AAAE | %TX_BONUS    | %TX_DONE |   1.00 | 1.00 | community | NEW.ZZB | bonus on #1  | 0      |"');
    And__('balances: "DATA'
    . '\\| id        | r    | usd      | rewards |'
    . '\\| NEW.ZZA   | 0.50 | AMT1-.20 |   10.50 |"');
    When_('member "NEW.ZZA" visits page "transactions/period=365"');
    Then_('we show "Transaction History" with: "DATA'
    . '\\| Start Date | End Date | Start Balance | To You | From You | Rewards | End Balance |'
    . '\\| %dmy-12m   | %dmy     | $0.00         | 0.00   |    10.00 |   10.50 |       $0.50 |'
    . '\\|            |          | PENDING       | 0.00   |     0.00 |    0.00 |     + $0.00 |"');
    And__('we show "Transaction History" with: "DATA'
    . '\\| tid | Date | Name    | From you | To you | r%   | Status  | Buttons | Purpose | Rewards |'
    . '\\| 2   | %dm  | Bea Two | 10.00    | --     | 98.0 | %chk    | X       | labor   |    0.50 |"');
  }

  // Scenario: A member confirms payment with insufficient USD balance
  public function testAMemberConfirmsPaymentWithInsufficientUSDBalance_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('usd: "DATA'
    . '\\| id        | usd       |'
    . '\\| NEW.ZZA   | +AMT1+100 |"');
    When_('member "NEW.ZZA" confirms form "pay" with values: "DATA'
    . '\\| op  | who     | amount     | goods | purpose |'
    . '\\| pay | Bea Two | AMT1+10.01 | 1     | labor   |"');
    Then_('we say "error": "short to" with subs: "DATA'
    . '\\| short |'
    . '\\| $0.01 |"');
    And__('balances: "DATA'
    . '\\| id        | r  | usd  | rewards |'
    . '\\| NEW.ZZA   | 10 | AMT1 |      10 |"');
  }

}
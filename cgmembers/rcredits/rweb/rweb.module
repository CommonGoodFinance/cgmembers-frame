<?php
/**
 * @file
 * rCredits Web Interface
 *
 * An interface module for the rCredits financial system.
 *
 * Note: to display one of the blocks defined herein on a page, use
 * print render(rweb_block_view('blockname'));)
 */

use rCredits as r;
use rCredits\Backend as be;
use rCredits\Util as u;

require_once __DIR__ . '/../rcredits.inc';
require_once __DIR__ . '/rweb.inc';

define('RWEB_BLOCKS', 'accounts footer');

/**
 * Implements hook_block_info().
 */
function rweb_block_info() {
  $info = [];
  foreach (u\ray(RWEB_BLOCKS) as $one) {
    $def = array('info' => ucfirst($one) . ' Block');
    $status = 1;
    $def += compact(u\ray('region status'));
    $info[$one] = $def;
  }
  $info['footer']['cache'] = -1;
  $info['footer']['region'] = 'footer';
  $info['accounts']['region'] = 'accounts';
  return $info;
}

/**
 * Implements hook_block_view().
 */
function rweb_block_view($delta = '') {
  if (in_array($delta, u\ray(RWEB_BLOCKS))) return r\Web\blockView(NULL, r\Web\showForm($delta)); // no subject for blocks
}

function menuNorm($title, $args, $perms = '', $func = 'showForm') {
  return r\Web\menu($title, MENU_NORMAL_ITEM, $func, $args, $perms);
}
function menuLocal($title, $args, $perms = '', $func = 'showForm') {
  if ($dft = (substr($args, 0, 1) == '*')) $args = substr($args, 1);
  return r\Web\menu($title, $dft ? MENU_DEFAULT_LOCAL_TASK : MENU_LOCAL_TASK, $func, $args, $perms);
}
function callback($title, $args, $perms = '', $func = 'showForm') {
  return r\Web\menu($title, MENU_CALLBACK, $func, $args, $perms);
}

/**
 * Implements hook_menu().
MENU_CALLBACK  Menu type -- A hidden, internal callback, typically used for API calls.
MENU_DEFAULT_LOCAL_TASK  Menu type -- The "default" local task, which is initially active.
MENU_LOCAL_ACTION  Menu type -- An action specific to the parent, usually rendered as a link.
MENU_LOCAL_TASK  Menu type -- A task specific to the parent item, usually rendered as a tab.
MENU_NORMAL_ITEM  Menu type -- A "normal" menu item that's shown in menu and breadcrumbs.
MENU_SUGGESTED_ITEM  Menu type -- A normal menu item, hidden until enabled by an administrator.
 */
function rweb_menu() {

  $menu = array(
    'signin' => callback('Sign in', 'Signin', 'anyone'),
//    'sinx' => callback('Sign in from elsewhere', 'Sinx', 'anyone'),

    'summary' => menuNorm(t('Summary'), 'Summary', 'read'),
    'history' => menuNorm(t('History'), 'Txs 1', 'read'),
    'history/transactions' => menuLocal(t('Transactions'), '*Txs 1', 'read'),
    'history/invoices-to' => menuLocal(t('Invoices TO You'), 'Invoices to', 'read'),
    'history/invoices-from' => menuLocal(t('Invoices FROM You'), 'Invoices from', 'read'),
    'history/statements' => menuLocal(t('Statements'), 'Statements 2', 'read'),
    'history/notices' => menuLocal(t('Notices'), 'Notices 2', 'read'),
    'history/1099-B' => menuLocal(t('1099-B Forms'), '1099b', 'read'),
    'history/changes' => menuLocal(t('See Changes'), 'SeeChanges', 'cadmin'),
    'history/zot' => menuLocal('zot', '', 'anyone'), // Drupal bug: last choice is omitted
    'history/statement' => callback(t('Statement'), '2', 'read', 'statement'),
//    'history/notice' => callback(t('Notice'), 'Notice 2', 'read'),

    'charge' => menuNorm(t('Charge'), 'Tx 1', 'sell ok'),
    'pay' => menuNorm(t('Pay'), 'Tx 1', 'buy ok'),
    'pay/one' => menuLocal(t('Pay One'), '*Tx', 'co buy ok'),
    'pay/payroll' => menuLocal(t('Upload Payroll'), 'Payroll', 'co buy ok'),
    'pay/zot' => menuLocal('zot', '', 'anyone'), // Drupal bug: last choice is omitted

    'grant' => menuNorm(t('Grant'), 'Tx', 'managing_ctty'),
    'loan' => menuNorm(t('Loan'), 'Tx', 'managing_ctty'),
    'invest' => menuNorm(t('Invest'), 'Tx', 'managing_ctty'),
    'fine' => menuNorm(t('Fine'), 'Tx', 'managing_ctty'),

    'get' => menuNorm(t('Bank'), 'Get 1', 'manage bank ok'),
    'community' => menuNorm(t('Community'), 'FindCo', 'anyone'),
    'community/find-company' => menuLocal(t('Find Co'), '*FindCo', 'anyone'),
    'community/invite' => menuLocal(t('Invite'), 'Invite', 'member'),
    'community/donate' => menuLocal(t('Donate'), 'Donate', 'manage'),
    'community/funds' => menuLocal(t('Funds'), 'CttyFunds', 'anyone'),
    'community/graphs' => menuLocal(t('Graphs'), 'Reports 1', 'anyone'),
    'community/flags' => menuLocal(t('Flags'), 'Flags 2', 'anyone'),
//    'community/game' => isGAME ? menuLocal(t('Game'), 'Game', 'anyone') : NULL,
    'community/zot' => menuLocal('zot', '', 'anyone'), // Drupal bug: last choice is omitted
    
    'account' => menuNorm(t('Settings'), 'Settings', 'manage'),
//    'account/settings' => menuLocal(t('Settings'), '*Settings', 'manage'),
    'account/contact' => menuLocal(t('Contact Info'), 'Contact', 'manage'),
    'account/preferences' => menuLocal(t('Preferences'), 'Options', 'manage'),
    'account/security' => menuLocal(t('Security'), 'Security 2', 'manage person'),
    'account/bank' => menuLocal(t('Bank Info'), 'Bank 2', 'manage'),
    'account/company' => menuLocal(t('Company Info'), 'Company', 'manage co'),
    'account/relations' => menuLocal(t('Relations'), 'Relations', 'manage'),
    'account/boxes' => menuLocal(t('Devices'), 'Boxes', 'manage'),
    'account/proxies' => menuLocal(t('Proxies'), 'Proxies', 'manage person'),
    'account/zot' => menuLocal('zot', '', 'anyone'), // Drupal bug: last choice is omitted

    'reset' => callback(t('Choose New Password'), 'ResetPassword 1', 'anyone'),
    'account/password' => callback(t('Request New Password'), 'Pass 2', 'anyone'),
    'account/change-password' => callback('Change Password', 'ChangePassword', 'manage'),
    'account/change-pin' => callback('Change PIN', 'ChangePin', 'manage'),
    'account/photo' => callback('Photo', 'Photo', 'manage'),
    'account/icon' => callback('Icon', 'Icon', 'read'),
//    'account/verify-phone' => callback('Verify Phone', 'VerifyPhone', 'manage dw'),
//    'account/readd-phone' => callback('reAdd Phone', '', 'manage dw', 'addPhone'),
    'account/basic' => callback('Basic', 'Basic', 'manage'),
//    'account/kba' => callback('Kba', 'Kba', 'manage dw'),
//    'account/photo-id' => callback('Kba', 'PhotoId', 'manage'),
    'account/proxy' => callback('Proxy', 'Proxy 2', 'manage'),

    'signout' => menuNorm(t('Sign out'), '', 'anyone', 'signout'),

    'handy' => isDEV ? menuNorm(t('Handy'), '', 'dev', 'handyLinks') : NULL,
    'tests' => isDEV ? menuNorm(t('Test'), '1', isDEV ? 'dev' : NULL, 'test') : NULL,
    'php' => isDEV ? menuNorm(t('PHP'), 'php', 'dev', 'util') : NULL,
    
    'menu' => callback(t('Menu'), 'Menu', 'anyone'),
    'empty' => callback(t('Empty'), 'Empty 1', 'anyone'),

    'request-employee-rcard' => callback(t('Request Employee rCard'), 'RequestRCard 1', 'manage'),
    
    'I' => callback('Scanned QR', 'I', 'anyone'),
    
    'another' => callback(t('Open Another Account'), 'Another', 'manage'),
    'handle-invoice' => callback(t('Handle Invoice'), 'HandleInvoice 1', 'anyone'),
    'rerisk' => callback(t('Recalculate Risk'), 'Rerisk 1 2 3', 'regulator'),

    'sadmin' => menuNorm(t('Admin'), 'Admin', 'cadmin2'),
    'sadmin/panel' => menuLocal(t('Panel'), '*Admin', 'cadmin'),
    'sadmin/member-list' => menuLocal(t('Member List'), 'MemberList', 'cadmin2'),
    'sadmin/export-list' => menuLocal(t('Export'), 'DownloadMemberList', 'cadmin2'),
    'sadmin/deposits' => menuLocal(t('Deposits'), 'Deposits', 'admin'),
    'sadmin/another' => menuLocal(t('New Account'), 'Another', 'cadmin'),
    'sadmin/make-community' => menuLocal(t('Make Ctty'), 'MakeCtty', 'admin'),
    'sadmin/sms' => menuLocal(t('Test SMS'), 'SMS', 'admin'),
    'sadmin/handy' => isDEV ? NULL : menuLocal(t('Handy'), '', 'dev', 'handyLinks'),
//    'sadmin/tests' => menuLocal(t('Test'), '2', isDEV ? 'dev' : NULL, 'test'),
    'sadmin/php' => isDEV ? NULL : menuLocal(t('PHP'), 'php', 'dev', 'util'),
    'sadmin/zot' => menuLocal('zot', '', 'admin'), // Drupal bug: last choice is omitted
    'sadmin/acct-info' => callback('Account Info', 'Summary 2', 'regulator'),
    'sadmin/tx-info' => callback('Transaction Info', 'TxInfo 2', 'regulator'),
    'sadmin/deposit-details' => callback(t('Deposit Details'), '2', 'admin', 'depositDetails'),
    'sadmin/checks' => callback(t('Checks'), '2', 'admin', 'printChecks'),
    'sadmin/changes' => callback(t('See Changes'), 'SeeChanges 2', 'cadmin'),
    'rcredits/util' => callback('Util', '2', 'admin', 'util'),
    'sadmin/recover' => callback(t('Empty'), 'TestRecovery 1', 'dev'), // also go here manually, if needed
    'print-rcard' => callback(t('Print ID Card'), '1 ', 'cadmin', 'memberID'),

    'help' => callback(t('Help'), 'Help 1', 'anyone'),
    'change-account' => callback(t('Change Who'), '1', 'anyone', 'changeWho'),
    'status' => callback('Status', 'Membership 2', 'manage'),
    'agreement' => callback(t('The Agreement'), 'Agreement', 'anyone'),
    'signup' => callback(t('Sign Up For rCredits'), 'Signup', 'anyone'),
    'menu' => callback('Main Menu', 'Menu', 'anyone'),
    'member' => callback('Company Profile', 'Profile', 'anyone'),
    'autocomplete' => callback('Identify', '1 2 3', 'anyone', 'auto'),
    'do' => callback('Do', '1 2', 'anyone', 'rdo'),
    'coup' => callback(t('Disable account'), '1', 'anyone', 'coup'),    
    'invited-whom' => callback('Invited Whom', 'InvitedWhom', 'manage'),
    'waiting' => callback('Waiting', 'Waiting', 'manage'),

    'accept' => callback('Accept Invitation', 'Accept', 'anyone'), // called from promo site rCredits.org
    'pos' => callback('POS', '', 'anyone', 'rCredits\\Smart\\pos'), // called from the rPOS app
    'whosin' => callback(t('Who\'s in?'), '1', 'anyone', 'whosin'), // called from promo site
    'secret' => callback('Secret', '', 'anyone', 'secrets'),
    'error' => callback('System Error', '1', 'anyone', 'error'),
    
    'pay-with-rcredits' => callback('Pay With rCredits', 'Buy', 'anyone'), // form will require PIN
  );
// $menu['user/password'] = $menu['account/password']; // duplicates user/password (handles built-in Drupal link)

  return $menu;
}

function rweb_menu_alter(&$items) {
  foreach (u\ray('node user/password user/register') as $one) unset($items[$one]);
}

function rweb_form_alter(&$form, &$sta, $form_id) {
global $base_url;
//  if ($form_id == 'user_pass_reset') return r\Web\resetAlter($form, $sta);
//  if ($form_id == 'user_login') {return r\Web\formLogin($form, $sta);} // NEVER CALLED!
  // (has no effect, keep as comment) if ($form_id == 'user_register') {return r\Web\formRegister($form, $sta);}
  $req = basename($_SERVER['REQUEST_URI']);
///  debug(compact('req','form_id'));
  if ($req == 'login' and !user_is_logged_in()) {header("location:$base_url/" . (isGAME ? 'community/game' : 'signin')); exit();} // nothing else works
  if ($req == 'logout' and !user_is_logged_in()) {header('location:' . (isGAME ? "$base_url/community/game" : (isDEV ? 'http://localhost/devcore' : R_SITE_URL) . '/signin')); exit();} // nothing else works
  if ($req == 'user' and user_is_logged_in()) r\go(isGAME ? 'community/game' : 'summary'); // summary not ''
}

//function rweb_form_user_register_form_alter(&$form, &$sta, $form_id) {r\Web\formRegister($form, $sta);}
//function rweb_form_user_login_block_alter(&$form, &$sta, $form_id) {return r\Web\formLogin($form, $sta, FALSE);}
// (has no effect, keep as comment) function rweb_form_user_login_form_alter(&$form, &$sta, $form_id) {return r\Web\formLogin($form, $sta);}
//function rweb_user_login(&$edit, $account) {r\Web\loginFollowup($edit, $account->uid);}
//function rweb_form_user_pass_alter(&$form, &$sta) {return r\Web\passAlter($form, $sta);}

/*function rweb_form_user_profile_form_alter(&$form, &$sta, $form_id) {
  $form['account']['pass']['#process'] = array('expand_password_confirm', 'yourmodule_password_confirm');
}*/

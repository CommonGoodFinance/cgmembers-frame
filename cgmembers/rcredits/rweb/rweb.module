<?php
/**
 * @file
 * rCredits Web Interface
 *
 * An interface module for the rCredits financial system.
 *
 * Note: to display one of the blocks defined herein on a page, use
 * echo render(rweb_block_view('blockname'));)
 */

use rCredits as r;
use rCredits\Backend as be;
use rCredits\Util as u;

require_once __DIR__ . '/../rcredits.inc';
require_once __DIR__ . '/rweb.inc';
//require_once __DIR__ . '/../rsmart/rsmart.inc'; // for smart api menu entry

define('RWEB_BLOCKS', 'accounts footer');

/**
 * Implements hook_block_info().
 */
function rweb_block_info() {
  $info = array();
  foreach (u\ray(RWEB_BLOCKS) as $one) {
    $def = array('info' => ucfirst($one) . ' Block');
    $status = 1;
    $def += compact(u\ray('region status'));
    $info[$one] = $def;
  }
  $info['footer']['cache'] = -1;
  $info['footer']['region'] = 'footer';
  $info['accounts']['region'] = 'accounts';
  return $info;
}

/**
 * Implements hook_block_view().
 */
function rweb_block_view($delta = '') {
  if (in_array($delta, u\ray(RWEB_BLOCKS))) return r\Web\blockView(NULL, r\Web\showForm($delta)); // no subject for blocks
}

function menuNorm($title, $args, $perms = '', $func = 'showForm') {
  return r\Web\menu($title, MENU_NORMAL_ITEM, $func, $args, $perms);
}
function menuLocal($title, $args, $perms = '', $func = 'showForm') {
  if ($dft = (substr($args, 0, 1) == '*')) $args = substr($args, 1);
  return r\Web\menu($title, $dft ? MENU_DEFAULT_LOCAL_TASK : MENU_LOCAL_TASK, $func, $args, $perms);
}
function callback($title, $args, $perms = '', $func = 'showForm') {
  return r\Web\menu($title, MENU_CALLBACK, $func, $args, $perms);
}

/**
 * Implements hook_menu().
MENU_CALLBACK	Menu type -- A hidden, internal callback, typically used for API calls.
MENU_DEFAULT_LOCAL_TASK	Menu type -- The "default" local task, which is initially active.
MENU_LOCAL_ACTION	Menu type -- An action specific to the parent, usually rendered as a link.
MENU_LOCAL_TASK	Menu type -- A task specific to the parent item, usually rendered as a tab.
MENU_NORMAL_ITEM	Menu type -- A "normal" menu item that's shown in menu and breadcrumbs.
MENU_SUGGESTED_ITEM	Menu type -- A normal menu item, hidden until enabled by an administrator.
 */
function rweb_menu() {
  //$smart = array('module' => 'rsmart', 'file' => 'rsmart.inc');
  //$modal = array('modal' => TRUE);
  
  $menu = array(
    'summary' => menuNorm(t('Summary'), 'Summary', 'anyone'),
    'transactions' => menuNorm(t('Transactions'), 'Txs 1', 'read'),
    'charge' => menuNorm(t('Charge'), 'Tx', 'admin sell ok'),
    'pay' => menuNorm(t('Pay'), 'Tx 1', 'buy ok'),

    'grant' => menuNorm(t('Grant'), 'Tx', 'managing_ctty'),
    'loan' => menuNorm(t('Loan'), 'Tx', 'managing_ctty'),
    'invest' => menuNorm(t('Invest'), 'Tx', 'managing_ctty'),
    'fine' => menuNorm(t('Fine'), 'Tx', 'managing_ctty'),

    'get' => menuNorm(t('Bank'), 'Get', 'manage bank ok'),
    'directory' => menuNorm(t('Find Co'), 'Directory', 'sell'),
    'community' => menuNorm(t('Community'), 'Reports 1', 'anyone'),
    'invite' => menuNorm(t('Invite'), 'Invite', 'anyone'),
    'signout' => menuNorm(t('Sign out'), '', 'anyone', 'signout'),

    'menu' => callback(t('Menu'), 'Menu', 'anyone'),
    'empty' => callback(t('Empty'), 'Empty', 'anyone'),

    'request-employee-rcard' => callback(t('Request Employee rCard'), 'RequestRCard 1', 'manage'),
    
    'I' => callback('Scanned QR', 'I', 'anyone'),

    'account' => callback(t('Account Settings'), 'Contact', 'manage'),
    'account/contact' => menuLocal(t('Contact Info'), '*Contact', 'manage'),
    'account/preferences' => menuLocal(t('Preferences'), 'Options', 'manage'),
    'account/security' => menuLocal(t('Security'), 'Security 2', 'manage personish'),
    'account/bank' => menuLocal(t('Bank Info'), 'Bank 2', 'manage dw'),
    'account/company' => menuLocal(t('Company Info'), 'Company', 'manage co'),
    'account/relations' => menuLocal(t('Relations'), 'Relations', 'manage'),
    'account/boxes' => menuLocal(t('Devices'), 'Boxes', 'manage'),
    'account/proxies' => menuLocal(t('Proxies'), 'Proxies', 'manage personish'),
    'account/settings' => menuLocal(t('Settings'), 'Settings', 'manage'),

    'user/password' => callback(t('Request New Password'), 'Pass 2', 'anyone'), // duplicates account/password (to handle built-in Drupal link)
    'account/password' => callback(t('Request New Password'), 'Pass 2', 'anyone'),
    'account/change-password' => callback('Change Password', 'ChangePassword', 'manage'),
    'account/change-pin' => callback('Change PIN', 'ChangePin', 'manage'),
    'account/photo' => callback('Photo', 'Photo', 'manage'),
    'account/verify-phone' => callback('Verify Phone', 'VerifyPhone', 'manage dw'),
    'account/readd-phone' => callback('reAdd Phone', '', 'manage dw', 'addPhone'),
    'account/basic' => callback('Basic', 'Basic', 'manage'),
    'account/kba' => callback('Kba', 'Kba', 'manage dw'),
    'account/photo-id' => callback('Kba', 'PhotoId', 'manage'),
    
    'another' => callback(t('Open Another Account'), 'Another', 'manage'),

    'sadmin' => menuNorm(t('Admin'), 'Admin', 'cadmin'),
    'sadmin/panel' => menuLocal(t('Panel'), '*Admin', 'cadmin'),
    'sadmin/member-list' => menuLocal(t('Member List'), 'MemberList', 'cadmin2'),
    'sadmin/make-community' => menuLocal(t('Make Ctty'), 'MakeCtty', 'admin'),
    'sadmin/sms' => menuLocal(t('Test SMS'), 'SMS', 'admin'),
    'sadmin/reinstall' => menuLocal(t('Reinstall rCredits'), '', 'admin', 'reinstall'),
    'sadmin/handy' => menuLocal(t('Handy'), '', 'dev', 'handyLinks'),
    'sadmin/tests' => menuLocal(t('Test'), '2', isDEV ? 'dev' : NULL, 'test'),
    'sadmin/php' => menuLocal(t('PHP'), 'php', 'dev', 'util'),
    'sadmin/zot' => menuLocal('zot', '', 'admin'), // Drupal bug: last choice is omitted
    'sadmin/member-info' => callback('Member Info', 'MemberInfo 2', 'cadmin2'),
    'print-rcard' => callback(t('Print ID Card'), '1 FALSE', 'cadmin', 'memberID'),
//    'rcredits/util' => callback('Util', '2', 'admin', 'util'),
    
    'help' => callback(t('Help'), 'Help 1', 'anyone'),
    'change-account' => callback(t('Change Who'), '1', 'anyone', 'changeWho'),
    'status' => callback('Status', 'Membership 2', 'manage'),
    'agreement' => callback(t('The Agreement'), 'Agreement', 'manage'),
    'donate' => callback(t('Donate'), 'Donate', 'manage'),
    'signup' => callback(t('Sign Up For rCredits'), 'Signup', 'anyone'),
    'menu' => callback('Main Menu', 'Menu', 'anyone'),
    'member' => callback('Company Profile', 'Profile', 'anyone'),
    'autocomplete' => callback('Identify', '1 2 3', 'anyone', 'auto'),
    'do' => callback('Do', '1', 'anyone', 'rdo'),
    'coup' => callback(t('Disable account'), '1', 'anyone', 'coup'),    
    '1099-B' => callback('1099-B Forms', '1099b', 'read'),
    'invited-whom' => callback('Invited Whom', 'InvitedWhom', 'manage'),

    'accept' => callback('Accept Invitation', 'Accept', 'anyone'),
    'pos' => callback('POS', '', 'anyone', 'rCredits\\Smart\\pos'),
    R_GET_AUTH_URI => callback('USD Get Auth', 'getAuth2 1', 'manage', 'usdCallback'),
    'usd-callback' => callback('USD Other Callback', 'callback 1', 'anyone', 'usdCallback'),
    'secret' => callback('Secret', '', 'anyone', 'secrets'),
    'error' => callback('System Error', '1', 'anyone', 'error'),
    
    'pay-with-rcredits' => callback('Pay With rCredits', 'Buy', 'anyone'), // form will require PIN
  );
  return $menu;
}

function rweb_menu_alter(&$items) {
  foreach (u\ray('node user/password user/register') as $one) unset($items[$one]);
}

function rweb_form_alter(&$form, &$sta, $form_id) {
///debug($form);
///debug($sta);
///debug($form_id);
///debug($_SERVER);
//  if ($form_id == 'user_pass_reset') return r\Web\resetAlter($form, $sta);
  if ($form_id == 'user_login') {return r\Web\formLogin($form, $sta);}
  // (has no effect, keep as comment) if ($form_id == 'user_register') {return r\Web\formRegister($form, $sta);}
  $req = basename($_SERVER['REQUEST_URI']);
  if ($req == 'logout' and !user_is_logged_in()) r\go('user');
  if ($req == 'user' and user_is_logged_in()) r\go('summary'); // summary not ''
}

//function rweb_form_user_register_form_alter(&$form, &$sta, $form_id) {r\Web\formRegister($form, $sta);}
//function rweb_form_user_login_block_alter(&$form, &$sta, $form_id) {return r\Web\formLogin($form, $sta, FALSE);}
// (has no effect, keep as comment) function rweb_form_user_login_form_alter(&$form, &$sta, $form_id) {return r\Web\formLogin($form, $sta);}
function rweb_user_login(&$edit, $account) {r\Web\loginFollowup($edit, $account);}
//function rweb_form_user_pass_alter(&$form, &$sta) {return r\Web\passAlter($form, $sta);}

/*function rweb_form_user_profile_form_alter(&$form, &$sta, $form_id) {
  $form['account']['pass']['#process'] = array('expand_password_confirm', 'yourmodule_password_confirm');
}*/

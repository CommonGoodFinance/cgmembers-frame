<?php
//
// Feature: Abbreviations work
//   AS a caller
//   I WANT to type as little as possible
//   SO I can get stuff done fast

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsAbbreviationsWork extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $currentTest;
  var $variant;
  const SHORT_NAME = 'AbbreviationsWork';
  const FEATURE_NAME = 'rsms Test - AbbreviationsWork';
  const DESCRIPTION = 'Abbreviations work';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->currentTest);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() { // especially, enable any modules required for the tests
    parent::setUp(self::MODULE);
    if (function_exists('extraSetup')) extraSetup($this); // defined in rsms.steps
    sceneSetup($this, __FUNCTION__);

    switch ($this->variant) {
    default: // fall through to case(0)

    }
  }

  // Scenario: A caller abbreviates command words
  public function testACallerAbbreviatesCommandWords_0() {
    sceneSetup($this, __FUNCTION__, 0);
    Given('phone %number1 is a member');
    When_('phone %number1 says "h g"');
    Then_('we say to phone %number1 "help get"');
  }

  // Scenario: A caller abbreviates with wrong syntax
  public function testACallerAbbreviatesWithWrongSyntax_0() {
    sceneSetup($this, __FUNCTION__, 0);
    Given('phone %number1 is a member');
    When_('phone %number1 says "12 f"');
    Then_('we say to phone %number1 "syntax|help charge"');
  }

}
<?php
//
// Feature: Abbreviations work
//   AS a caller
//   I WANT to type as little as possible
//   SO I can get stuff done fast
//   

require_once __DIR__ . '/../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsAbbreviationsWork extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %number1 becomes some random number)
  var $current_test;
  const FEATURE_NAME = 'rsms Test - AbbreviationsWork';
  const DESCRIPTION = 'Abbreviations work';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkin_guts($statement, $type), $statement, $this->current_test);
  }
  
  public static function getInfo() {
    return array('name' => self::FEATURE_NAME, 'description' => self::DESCRIPTION, 'group' => ucwords(self::MODULE));
  }

  public function setUp() { // especially, enable any modules required for the tests
    parent::setUp(self::MODULE);
    $setup_filename = __DIR__ . '/../' . self::MODULE . '-setup.inc';
    if (file_exists($setup_filename)) include $setup_filename;
  }

  // Scenario: A caller abbreviates command words
  public function testACallerAbbreviatesCommandWords() {
    scene_setup($this, __FUNCTION__);
    Given('phone %number1 is a player');
    When_('phone %number1 says "h g"');
    Then_('we say to phone %number1 "help get"');
  }

  // Scenario: A caller abbreviates with wrong syntax
  public function notestACallerAbbreviatesWithWrongSyntax() {
    scene_setup($this, __FUNCTION__);
    Given('phone %number1 is a player');
    When_('phone %number1 says "12 f"');
    Then_('we say to phone %number1 "syntax|help charge"');
  }

}
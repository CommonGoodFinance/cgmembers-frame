<?php
//
// Feature: Transaction pre-launch
//   AS a player
//   I WANT to simulate a transfer of rCredits from my account to someone else's or vice versa
//   SO I will get a rebate or bonus that I can spend once I am an active participant
//   

require_once __DIR__ . '/../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsTransaction extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %number1 becomes some random number)
  var $currentTest;
  const FEATURE_NAME = 'rsms Test - Transaction';
  const DESCRIPTION = 'Transaction pre-launch';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->currentTest);
  }
  
  public static function getInfo() {
    return array('name' => self::FEATURE_NAME, 'description' => self::DESCRIPTION, 'group' => ucwords(self::MODULE));
  }

  public function setUp() { // especially, enable any modules required for the tests
    parent::setUp(self::MODULE);
    $setup_filename = __DIR__ . '/../' . self::MODULE . '-setup.inc';
    if (file_exists($setup_filename)) include $setup_filename;

    sceneSetup($this, __FUNCTION__);
    Given('members: "DATA'
    . '\\| id   | full_name  | phone  | email         |'
    . '\\| .ZZA | Abe One    | +20001 | a@example.com |'
    . '\\| .ZZB | Bea Two    | +20002 | b@example.com |'
    . '\\| .ZZC | Corner Pub | +20003 | c@example.com |"');
    And__('transactions: "DATA'
    . '\\| created   | type       | amount | from      | to   | purpose |'
    . '\\| %today-1d | %TX_SIGNUP | 250    | community | .ZZA | signup  |'
    . '\\| %today-1d | %TX_SIGNUP | 250    | community | .ZZB | signup  |'
    . '\\| %today-1d | %TX_SIGNUP | 250    | community | .ZZC | signup  |"');

  }

  // Scenario: The caller asks to pay a member id
  public function testTheCallerAsksToPayAMemberId() {
    sceneSetup($this, __FUNCTION__);
    When_('phone +20001 says "123.45 to .ZZB for pie"');
    Then_('we say to phone +20001 "confirm payment|please confirm" with subs: "DATA'
    . '\\| amount  | other_name |'
    . '\\| $123.45 | Bea Two    |"');
  }

  // Scenario: The caller asks to pay a player by name
  public function testTheCallerAsksToPayAPlayerByName() {
    sceneSetup($this, __FUNCTION__);
    When_('phone +20001 says "123.45 to cornerpub for groceries"');
    Then_('we say to phone +20001 "confirm payment|please confirm" with subs: "DATA'
    . '\\| amount  | other_name |'
    . '\\| $123.45 | Corner Pub |"');
  }

  // Scenario: The caller asks to charge a member id
  public function testTheCallerAsksToChargeAMemberId() {
    sceneSetup($this, __FUNCTION__);
    When_('phone +20001 says "123.45 from .ZZC for labor"');
    Then_('we say to phone +20001 "confirm charge|please confirm" with subs: "DATA'
    . '\\| amount  | other_name |'
    . '\\| $123.45 | Corner Pub |"');
  }

  // Scenario: The caller confirms a payment
  public function testTheCallerConfirmsAPayment() {
    sceneSetup($this, __FUNCTION__);
    When_('phone +20001 confirms "100 to .ZZC for groceries"');
    Then_('the community has r$-765');
    And__('phone +20003 has r$360');
    And__('we say to phone +20001 "report transaction" with subs: "DATA'
    . '\\| action | other_name | amount | reward_type | reward_amount | balance | tid |'
    . '\\| paid   | Corner Pub | $100   | rebate      | $5            | $155    | 2   |"');
  }

  // Scenario: The caller confirms a request to charge
  public function testTheCallerConfirmsARequestToCharge() {
    sceneSetup($this, __FUNCTION__);
    When_('phone +20001 confirms "100 from .ZZC for labor"');
    Then_('phone +20003 has r$250');
    And__('phone +20001 has r$250');
    And__('we say to phone +20001 "report invoice" with subs: "DATA'
    . '\\| action  | other_name | amount | tid |'
    . '\\| charged | Corner Pub | $100   | 2   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | full_name  | other_name | amount | purpose |'
    . '\\| %today  | Corner Pub | Abe One    | $100   | labor   |"');
  }

  // Scenario: The caller confirms a unilateral charge
  public function testTheCallerConfirmsAUnilateralCharge() {
    sceneSetup($this, __FUNCTION__);
    Given('phone +20001 can charge unilaterally');
    When_('phone +20001 confirms "100 from .ZZC for labor"');
    Then_('the community has r$-765');
    And__('phone +20003 has r$155');
    And__('we say to phone +20001 "report transaction" with subs: "DATA'
    . '\\| action  | other_name | amount | reward_type | reward_amount | balance | tid |'
    . '\\| charged | Corner Pub | $100   | bonus       | $10           | $360    | 2   |"');
    And__('we email "new-charge" to member "c@example.com" with subs: "DATA'
    . '\\| created | full_name  | other_name | amount | purpose |'
    . '\\| %today  | Corner Pub | Abe One    | $100   | labor   |"');
  }

  // Scenario: The caller confirms a payment with insufficient balance
  public function testTheCallerConfirmsAPaymentWithInsufficientBalance() {
    sceneSetup($this, __FUNCTION__);
    When_('phone +20001 confirms "300 to .ZZC for groceries"');
    Then_('the community has r$-787.50');
    And__('phone +20003 has r$525');
    And__('we say to phone +20001 "report short transaction" with subs: "DATA'
    . '\\| action | other_name | amount | short | balance | tid |'
    . '\\| paid   | Corner Pub | $250   | $50   | $12.50  | 2   |"');
  }

  // Scenario: The caller asks to pay the latest invoice
  public function testTheCallerAsksToPayTheLatestInvoice() {
    sceneSetup($this, __FUNCTION__);
    Given('transactions: "DATA'
    . '\\| created   | state       | amount | from | to   | purpose| taking |'
    . '\\| %today-3d | %TX_PENDING | 100    | .ZZC | .ZZA | labor  | 1      |"');
    When_('phone +20003 says "pay"');
    Then_('we say to phone +20003 "confirm pay invoice|please confirm" with subs: "DATA'
    . '\\| amount | other_name | created   |'
    . '\\| $100   | Abe One    | %today-3d |"');
  }

  // Scenario: The caller confirms payment of the latest invoice
  public function testTheCallerConfirmsPaymentOfTheLatestInvoice() {
    sceneSetup($this, __FUNCTION__);
    Given('transactions: "DATA'
    . '\\| created   | state       | amount | from | to   | purpose| taking |'
    . '\\| %today-3d | %TX_PENDING | 100    | .ZZC | .ZZA | labor  | 1      |"');
    When_('phone +20003 confirms "pay"');
    Then_('the community has r$-765');
    And__('phone +20001 has r$360');
    And__('we say to phone +20003 "report transaction" with subs: "DATA'
    . '\\| action| other_name | amount | reward_type | reward_amount | balance | tid |'
    . '\\| paid  | Abe One    | $100   | rebate      | $5            | $155    | 3   |"');
  }

  // Scenario: The caller asks to pay the latest invoice from a particular member
  public function testTheCallerAsksToPayTheLatestInvoiceFromAParticularMember() {
    sceneSetup($this, __FUNCTION__);
    Given('transactions: "DATA'
    . '\\| created   | state       | amount | from | to   | purpose| taking |'
    . '\\| %today-3d | %TX_PENDING | 100    | .ZZC | .ZZA | labor  | 1      |'
    . '\\| %today-1d | %TX_PENDING | 100    | .ZZC | .ZZB | labor  | 1      |"');
    When_('phone +20003 says "pay .ZZA"');
    Then_('we say to phone +20003 "confirm pay invoice|please confirm" with subs: "DATA'
    . '\\| amount | other_name | created   |'
    . '\\| $100   | Abe One    | %today-3d |"');
  }

}
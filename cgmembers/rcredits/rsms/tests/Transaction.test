<?php
//
// Feature: Transaction pre-launch
//   AS a player
//   I WANT to simulate a transfer of rCredits from my account to someone else's or vice versa
//   SO I will get a rebate or bonus that I can spend once I am an active participant
//   

require_once __DIR__ . '/../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsTransaction extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %number1 becomes some random number)
  var $current_test;
  const FEATURE_NAME = 'rsms Test - Transaction';
  const DESCRIPTION = 'Transaction pre-launch';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkin_guts($statement, $type), $statement, $this->current_test);
  }
  
  public static function getInfo() {
    return array('name' => self::FEATURE_NAME, 'description' => self::DESCRIPTION, 'group' => ucwords(self::MODULE));
  }

  public function setUp() { // especially, enable any modules required for the tests
    parent::setUp(self::MODULE);
    $setup_filename = __DIR__ . '/../' . self::MODULE . '-setup.inc';
    if (file_exists($setup_filename)) include $setup_filename;

  }

  // Scenario: The caller asks to pay a member id
  public function testTheCallerAsksToPayAMemberId() {
    scene_setup($this, __FUNCTION__);
    Given('players: "DATA'
    . '\\| @name      | @memberid | @cell    |'
    . '\\| Abe One    | neabcdea  | %number1 |'
    . '\\| Bea Two    | neabcdeb  | %number2 |'
    . '\\| Corner Pub | neabcdec  | %number3 |"');
    When_('phone %number1 says "123.45 to neabcdeb for pie"');
    Then_('we say to phone %number1 "confirm transaction" with subs: "DATA'
    . '\\| @type | @amount | @who    | @for |'
    . '\\| Pay   | 123.45  | Bea Two | pie  |"');
  }

  // Scenario: The caller asks to pay a player by name
  public function testTheCallerAsksToPayAPlayerByName() {
    scene_setup($this, __FUNCTION__);
    Given('players: "DATA'
    . '\\| @name      | @memberid | @cell    |'
    . '\\| Abe One    | neabcdea  | %number1 |'
    . '\\| Bea Two    | neabcdeb  | %number2 |'
    . '\\| Corner Pub | neabcdec  | %number3 |"');
    When_('phone %number1 says "123.45 to .cornerpub for groceries"');
    Then_('we say to phone %number1 "confirm transaction" with subs: "DATA'
    . '\\| @type | @amount | @who       | @whatfor           |'
    . '\\| Pay   | 123.45  | Corner Pub | goods and services |"');
  }

  // Scenario: The caller asks to charge a member id
  public function testTheCallerAsksToChargeAMemberId() {
    scene_setup($this, __FUNCTION__);
    Given('players: "DATA'
    . '\\| @name      | @memberid | @cell    |'
    . '\\| Abe One    | neabcdea  | %number1 |'
    . '\\| Bea Two    | neabcdeb  | %number2 |'
    . '\\| Corner Pub | neabcdec  | %number3 |"');
    When_('phone %number1 says "123.45 from neabcdec for labor"');
    Then_('we say to phone %number1 "confirm transaction" with subs: "DATA'
    . '\\| @type  | @amount | @who       | @for  |'
    . '\\| Charge | 123.45  | Corner Pub | labor |"');
  }

  // Scenario: The caller confirms a payment
  public function testTheCallerConfirmsAPayment() {
    scene_setup($this, __FUNCTION__);
    Given('players: "DATA'
    . '\\| @name      | @memberid | @cell    | @rebate |'
    . '\\| Abe One    | neabcdea  | %number1 | 5       |'
    . '\\| Bea Two    | neabcdeb  | %number2 | 5       |'
    . '\\| Corner Pub | neabcdec  | %number3 | 5       |"');
    And__('transactions: "DATA'
    . '\\| @date     | @type  | @amount | @from    | @to      | @for          |'
    . '\\| %today-1d | signup | 250.00  | community| neabcdea | signup reward |"');
    When_('phone %number1 confirms "100 to neabcdec for groceries"');
    Then_('the community has r$-265');
    And__('phone %number3 has r$110');
    And__('transactions: "DATA'
    . '\\| @date  | @type   | @amount | @from    | @to      | @for         |'
    . '\\| %today | payment | 100     | neabcdea | neabcdec | groceries    |'
    . '\\| %today | rebate  | 5       | community| neabcdea | rebate on #2 |'
    . '\\| %today | bonus   | 10      | community| neabcdec | bonus on #1  |"');
    And__('we say to phone %number1 "report transaction" with subs: "DATA'
    . '\\| @type | @tofrom | @amount | @who       | @for      | @reward_type | @reward_amount | @balance | @transaction |'
    . '\\| paid  | to      | 100     | Corner Pub | groceries | rebate       | 5              | 155      | 2            |"');
  }

  // Scenario: The caller confirms a charge
  public function testTheCallerConfirmsACharge() {
    scene_setup($this, __FUNCTION__);
    Given('players: "DATA'
    . '\\| @name      | @memberid | @cell    | @rebate |'
    . '\\| Abe One    | neabcdea  | %number1 | 5       |'
    . '\\| Bea Two    | neabcdeb  | %number2 | 5       |'
    . '\\| Corner Pub | neabcdec  | %number3 | 5       |"');
    And__('transactions: "DATA'
    . '\\| @date     | @type  | @amount | @from    | @to      | @for          |'
    . '\\| %today-1d | signup | 250.00  | community| neabcdec | signup reward |"');
    When_('phone %number1 confirms "100 from neabcdec for labor"');
    Then_('the community has r$-265');
    And__('phone %number3 has r$155');
    And__('transactions: "DATA'
    . '\\| @date  | @type   | @amount | @from    | @to      | @for         |'
    . '\\| %today | charge  | 100     | neabcdec | neabcdea | labor        |'
    . '\\| %today | rebate  | 5       | community| neabcdec | rebate on #2 |'
    . '\\| %today | bonus   | 10      | community| neabcdea | bonus on #1  |"');
    And__('we say to phone %number1 "report transaction" with subs: "DATA'
    . '\\| @type   | @tofrom | @amount | @who       | @for  | @reward_type | @reward_amount | @balance | @transaction |'
    . '\\| charged | from    | 100     | Corner Pub | labor | bonus        | 10             | 110      | 1            |"');
  }

  // Scenario: The caller confirms a payment with insufficient balance
  public function testTheCallerConfirmsAPaymentWithInsufficientBalance() {
    scene_setup($this, __FUNCTION__);
    Given('players: "DATA'
    . '\\| @name      | @memberid | @cell    | @rebate |'
    . '\\| Abe One    | neabcdea  | %number1 | 5       |'
    . '\\| Bea Two    | neabcdeb  | %number2 | 5       |'
    . '\\| Corner Pub | neabcdec  | %number3 | 5       |"');
    And__('transactions: "DATA'
    . '\\| @date     | @type  | @amount | @from    | @to      | @for          |'
    . '\\| %today-1d | signup | 100.00  | community| neabcdea | signup reward |"');
    When_('phone %number1 confirms "250 to neabcdec for groceries"');
    Then_('the community has r$-115');
    And__('phone %number3 has r$110');
    And__('transactions: "DATA'
    . '\\| @date  | @type   | @amount | @from    | @to      | @for         |'
    . '\\| %today | payment | 100     | neabcdea | neabcdec | groceries    |'
    . '\\| %today | rebate  | 5       | community| neabcdea | rebate on #2 |'
    . '\\| %today | bonus   | 10      | community| neabcdec | bonus on #1  |"');
    And__('we say to phone %number1 "report transaction short" with subs: "DATA'
    . '\\| @type | @tofrom | @amount | @who       | @for      | @reward_type | @reward_amount | @balance | @transaction |'
    . '\\| paid  | to      | 100     | Corner Pub | groceries | rebate       | 5              | 155      | 2            |"');
  }

}
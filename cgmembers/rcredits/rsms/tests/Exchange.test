<?php
//
// Feature: Exchange for cash
//   AS a player
//   I WANT to exchange rCredits for someone's cash or vice versa
//   SO I can buy the things I want, locally and elsewhere

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsExchange extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Exchange';
  const FEATURE_NAME = 'rsms Test - Exchange';
  const DESCRIPTION = 'Exchange for cash';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rsms.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "DATA'
    . '\\| id   | fullName   | number | flags           |'
    . '\\| .ZZA | Abe One    | +20001 | ok,bona  |'
    . '\\| .ZZB | Bea Two    | +20002 | ok,bona  |'
    . '\\| .ZZC | Corner Pub | +20003 | co,ok,bona |"');
    And__('transactions: "DATA'
    . '\\| type     | amount | from | to   | purpose |'
    . '\\| signup   | 250    | ctty | .ZZA | signup  |'
    . '\\| signup   | 250    | ctty | .ZZB | signup  |'
    . '\\| signup   | 250    | ctty | .ZZC | signup  |'
    . '\\| transfer | 100    | .ZZB | .ZZA | goodies |"');
    Then_('balances: "DATA'
    . '\\| id   | r    |'
    . '\\| ctty | -765 |'
    . '\\| .ZZA |  360 |'
    . '\\| .ZZB |  155 |'
    . '\\| .ZZC |  250 |"');
    break;


    }
  }

  // Scenario: The caller confirms a trade of rCredits for cash
  public function testTheCallerConfirmsATradeOfRCreditsForCash_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 confirms "100 to .ZZC for cash"');
    Then_('balances: "DATA'
    . '\\| id   | r    |'
    . '\\| ctty | -765 |'
    . '\\| .ZZA |  260 |'
    . '\\| .ZZB |  155 |'
    . '\\| .ZZC |  350 |"');
    And__('we say to phone +20001 "report exchange" with subs: "DATA'
    . '\\| did    | otherName  | amount | balance | tid |'
    . '\\| paid   | Corner Pub | $100   | $260    | 3   |"');
  }

  // Scenario: The caller confirms an implicit trade of rCredits for cash
  public function testTheCallerConfirmsAnImplicitTradeOfRCreditsForCash_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 confirms "100 to .ZZC"');
    Then_('phone +20003 has r$350');
    And__('phone +20001 has r$260');
  }

  // Scenario: The caller asks to trade cash for rCredits
  public function testTheCallerAsksToTradeCashForRCredits_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20003 says "100 from .ZZA for cash"');
    Then_('phone +20003 has r$250');
    And__('phone +20001 has r$360');
    And__('we say to phone +20003 "no charging"');
  }

  // Scenario: The caller requests an implicit trade with insufficient balance
  public function testTheCallerRequestsAnImplicitTradeWithInsufficientBalance_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 says "150 to .ZZC"');
    Then_('we say to phone +20001 "short cash to" with subs: "DATA'
    . '\\| short |'
    . '\\| $50   |"');
  }

}
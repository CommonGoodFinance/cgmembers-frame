<?php
//
// Feature: Open an account for the caller
//   AS a newbie
//   I WANT to try rCredits
//   SO I can decide whether I want to participate.
//   

require_once dirname(__FILE__) . '/../gherkin/test_defs.php';
require_once dirname(__FILE__) . '/../rsms.steps';

class rsmsOpenAnAccountForTheCaller extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %number1 becomes some random number)
  var $current_test;
  const FEATURE_NAME = 'rsms Test - OpenAnAccountForTheCaller';
  const DESCRIPTION = 'Open an account for the caller';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkin_guts($statement, $type), $statement, $this->current_test);
  }
  
  public static function getInfo() {
    return array('name' => self::FEATURE_NAME, 'description' => self::DESCRIPTION, 'group' => ucwords(self::MODULE));
  }

  public function setUp() { // especially, enable any modules required for the tests
    parent::setUp(self::MODULE);
    $setup_filename = dirname(__FILE__) . '/../' . self::MODULE . '_setup.inc';
    if (file_exists($setup_filename)) include $setup_filename;
  }

  // Scenario: A total newbie calls
  public function testATotalNewbieCalls() {
    scene_setup($this, __FUNCTION__);
    Given('phone %number1 has no account');
    When_('phone %number1 says %whatever');
    Then_('phone %number1 has an account');
    And__('we say to phone %number1 "what\'s your name?"');
  }

  // Scenario: A nameless newbie calls
  public function notestANamelessNewbieCalls() {
    scene_setup($this, __FUNCTION__);
    Given('phone %number1 has an account');
    And__('phone %number1 has no name');
    And__('we did not just ask phone %number1 for a full name');
    When_('phone %number1 says %random');
    Then_('we say to phone %number1 "what\'s your name?"');
  }

  // Scenario: The newbie gives us his or her name
  public function notestTheNewbieGivesUsHisOrHerName() {
    scene_setup($this, __FUNCTION__);
    Given('we just asked phone %number1 for "name"');
    When_('phone %number1 says "Jo Smith"');
    Then_('phone %number1 account name is "Jo Smith"');
    And__('we say to phone %number1 "what\'s your email?" with subs: "DATA'
    . '\\| @name    |'
    . '\\| Jo Smith |"');
  }

  // Scenario: The newbie gives us an unlikely name
  public function notestTheNewbieGivesUsAnUnlikelyName() {
    scene_setup($this, __FUNCTION__);
    Given('we just asked phone %number1 for "name"');
    When_('phone %number1 says %random');
    Then_('we say to phone %number1 "what\'s your name really?"');
  }

  // Scenario: The newbie gives us his or her email address
  public function notestTheNewbieGivesUsHisOrHerEmailAddress() {
    scene_setup($this, __FUNCTION__);
    Given('we just asked phone %number1 for "email"');
    And__('the community has Pr$-1000');
    When_('phone %number1 says "zot@email.com"');
    Then_('phone %number1 email is "zot@email.com"');
    And__('phone %number1 has Pr$250');
    And__('the community has Pr$-1250');
    And__('we say to phone %number1 "your account is ready" with subs: "DATA'
    . '\\| @balance |'
    . '\\| $250      |"');
  }

  // Scenario: The newbie gives a bad email address
  public function notestTheNewbieGivesABadEmailAddress() {
    scene_setup($this, __FUNCTION__);
    Given('we just asked phone %number1 for "email"');
    When_('phone %number1 says %random');
    Then_('we say to phone %number1 "what\'s you email really?"');
  }

}
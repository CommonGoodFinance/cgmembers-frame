<?php
//
// Feature: Abbreviations work
//   AS a caller
//   I WANT to type as little as possible
//   SO I can get stuff done fast

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsAbbreviations extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Abbreviations';
  const FEATURE_NAME = 'rsms Test - Abbreviations';
  const DESCRIPTION = 'Abbreviations work';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rsms.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)

    }
  }

  // Scenario: A caller abbreviates command words
  public function testACallerAbbreviatesCommandWords_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('phone %number1 is a member');
    When_('phone %number1 says "h p"');
    Then_('we say to phone %number1 "help payment"');
  }

  // Scenario: A caller abbreviates with wrong syntax
  public function testACallerAbbreviatesWithWrongSyntax_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('phone %number1 is a member');
    When_('phone %number1 says "12 f"');
    Then_('we say to phone %number1 "syntax|help charge"');
  }

}
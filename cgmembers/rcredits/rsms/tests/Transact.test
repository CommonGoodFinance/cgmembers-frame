<?php
//
// Feature: Transact
//   AS a member
//   I WANT to transfer rCredits from my account to someone else's or vice versa
//   SO I will get a rebate or bonus that I can spend once I am an active participant

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rsms.steps';

class rsmsTransact extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Transact';
  const FEATURE_NAME = 'rsms Test - Transact';
  const DESCRIPTION = 'Transact';
  const MODULE = 'rsms';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rsms.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName   | number | flags      |'
    . '\\| .ZZA | Abe One    | +20001 | ok,bona  |'
    . '\\| .ZZB | Bea Two    | +20002 | ok,bona  |'
    . '\\| .ZZC | Corner Pub | +20003 | co,ok,bona |"');
    And__('relations: "ASSOC'
    . '\\| id   | main | agent | permission |'
    . '\\| :ZZA | .ZZC | .ZZB  | buy        |'
    . '\\| :ZZB | .ZZC | .ZZA  | sell       |"');
    And__('transactions: "ASSOC'
    . '\\| created   | type   | amount | from | to   | purpose |'
    . '\\| %today-1d | signup | 250    | ctty | .ZZA | signup  |'
    . '\\| %today-1d | signup | 250    | ctty | .ZZB | signup  |'
    . '\\| %today-1d | signup | 250    | ctty | .ZZC | signup  |"');
    break;


    }
  }

  // Scenario: The caller asks to pay a member id
  public function testTheCallerAsksToPayAMemberId_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 says "123.45 to .ZZB for pie"');
    Then_('we say to phone +20001 "confirm payment|please confirm" with subs: "ASSOC'
    . '\\| amount  | otherName |'
    . '\\| $123.45 | Bea Two    |"');
  }

  // Scenario: The caller asks to pay a player by name
  public function testTheCallerAsksToPayAPlayerByName_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 says "123.45 to cornerpub for groceries"');
    Then_('we say to phone +20001 "confirm payment|please confirm" with subs: "ASSOC'
    . '\\| amount  | otherName |'
    . '\\| $123.45 | Corner Pub |"');
  }

  // Scenario: The caller asks to charge a member id
  public function testTheCallerAsksToChargeAMemberId_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 says "123.45 from .ZZC for labor"');
    Then_('we say to phone +20001 "confirm charge|please confirm" with subs: "ASSOC'
    . '\\| amount  | otherName |'
    . '\\| $123.45 | Corner Pub |"');
  }

  // Scenario: The caller confirms a payment
  public function testTheCallerConfirmsAPayment_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 confirms "100 to .ZZC for groceries"');
    Then_('the community has r$-765');
    And__('phone +20003 has r$360');
    And__('we say to phone +20001 "report transaction" with subs: "ASSOC'
    . '\\| did    | otherName  | amount | rewardType | rewardAmount  | balance | tid |'
    . '\\| paid   | Corner Pub | $100   | reward     | $5            | $155    | 2   |"');
  }

  // Scenario: The caller confirms a request to charge
  public function testTheCallerConfirmsARequestToCharge_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 confirms "100 from .ZZC for labor"');
    Then_('phone +20003 has r$250');
    And__('phone +20001 has r$250');
    And__('we say to phone +20001 "report invoice" with subs: "ASSOC'
    . '\\| did     | otherName | amount | tid |'
    . '\\| charged | Corner Pub | $100   | 2   |"');
    And__('we notice "new invoice" to member "c@" with subs: "ASSOC'
    . '\\| created | fullName   | otherName | amount | purpose |'
    . '\\| %today  | Corner Pub | Abe One   | $100   | labor   |"');
  }

  // Scenario: The caller requests a payment with insufficient balance
  public function testTheCallerRequestsAPaymentWithInsufficientBalance_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 says "300 to .ZZC for groceries"');
    And__('we say to phone +20001 "short to" with subs: "ASSOC'
    . '\\| short |'
    . '\\| $50   |"');
  }

  // Scenario: The caller asks to pay the latest invoice
  public function testTheCallerAsksToPayTheLatestInvoice_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invoices: "ASSOC'
    . '\\| created   | status      | amount | from | to   | purpose|'
    . '\\| %today-3d | %TX_PENDING | 100    | .ZZC | .ZZA | labor  |"');
    And__('the expected nonce for phone +20003 is "NONCY"');
    When_('phone +20003 says "pay"');
    Then_('we say to phone +20003 "confirm pay invoice|please confirm" with subs: "ASSOC'
    . '\\| amount | otherName | created | nonce |'
    . '\\| $100   | Abe One   | %dmy-3d | NONCY |"');
  }

  // Scenario: The caller confirms payment of the latest invoice
  public function testTheCallerConfirmsPaymentOfTheLatestInvoice_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invoices: "ASSOC'
    . '\\| created   | status      | amount | from | to   | purpose|'
    . '\\| %today-3d | %TX_PENDING | 100    | .ZZC | .ZZA | labor  |"');
    When_('phone +20003 confirms "pay"');
    Then_('the community has r$-765');
    And__('phone +20001 has r$360');
    And__('we say to phone +20003 "report transaction" with subs: "ASSOC'
    . '\\| did   | otherName | amount | rewardType | rewardAmount | balance | tid |'
    . '\\| paid  | Abe One    | $100   | rebate      | $5            | $155    | 3   |"');
  }

  // Scenario: The caller asks to pay the latest invoice from a particular member
  public function testTheCallerAsksToPayTheLatestInvoiceFromAParticularMember_0() {
    $this->setUp2(__FUNCTION__, 0);
    Given('invoices: "ASSOC'
    . '\\| created   | status      | amount | from | to   | purpose|'
    . '\\| %today-3d | %TX_PENDING | 100    | .ZZC | .ZZA | labor  |'
    . '\\| %today-1d | %TX_PENDING | 100    | .ZZC | .ZZB | labor  |"');
    When_('phone +20003 says "pay .ZZA"');
    Then_('we say to phone +20003 "confirm pay invoice|please confirm" with subs: "ASSOC'
    . '\\| amount | otherName | created   |'
    . '\\| $100   | Abe One    | %today-3d |"');
  }

  // Scenario: The caller asks to pay a company agent
  public function testTheCallerAsksToPayACompanyAgent_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('phone +20001 confirms "123.45 to :ZZA for pie"');
    Then_('we say to phone +20001 "confirm payment|please confirm" with subs: "ASSOC'
    . '\\| amount  | otherName |'
    . '\\| $123.45 | Corner Pub |"');
  }

}
<?php
// $Id:

/**
 * @file
 * rSMS (rCredits SMS)
 *
 * An interface module for the rCredits financial system.
 */
 
//require dirname(__FILE__) . '/SMScall.inc';
define('RSMS_PREFIX_TRIAL', 'TRIAL RUN - '); // the pre-launch trial
define('RSMS_PREFIX_INACTIVE', 'TRIAL RUN - '); // pretend transactions by not-yet-active players (treat it as a trial run)
define('RSMS_PREFIX_ASIF', 'PRETEND - '); // pretend transactions by Active Participants

$GLOBALS['SMS commands'] = ''; // defined in $this->parse()
$GLOBALS['SMS messages'] = array(
  // reports
  'account info' => t("Your balance is @balance. The current demand for rCredits is @demand."),
  'your account is ready' => t('Thank you! Your Trial Run starting balance is @balance. Pretend to buy and sell, but be real. Do as you would expect to do in a typical month. That gives us the information we need, so that you can become an Active Participant. Type "help" to get started. And have fun.'),
//  'your account is ready' => t("Thank you! Your practice balance is @balance."),
  'get usd' => t("APPROVED. @amount will be transferred directly to your bank account within 24 hours."),
//  'get usd inactive' => t("If you were an Active Participant in the rCredits system, your request would transfer @amount directly to your bank account. Alas, you are not yet an Active Participant."),
  'report transaction' => t("You @type @other @amount (@reward_type: @reward_amount). Your new balance is @balance. Transaction #@tid"),
//  'transaction done asif' => t("@type: @amount @tofrom user#@other (@reward_type: @reward_amount). Your new provisional balance is @balance (If this had been a real transaction, your balance would be @amount @moreless). Transaction ID #@xid"),
  'report exchange' => t("You @type @other @amount @way. Your new balance is @balance. Transaction #@tid"),

  // questions
  "what's your name?" => t("To set up your rCredits account, we need your full name and email address. What's your name?"),
  "what's your email?" => t("Welcome to rCredits, @name. Last question: What is your email address?"),
  "what's your email really?" => t("Please type carefully. What is your email address?"),
  'please confirm' => t("To confirm, type @nonce."),
  
  // help messages
  'help for payment' => t("Payment examples: 12.34 to 413.772.0000 | 12.34 to .cornerstore | 12.34 to wgabcd for cash | 12.34 to jdough@example.com for wine and cheese (Include a description ONLY if it's \"cash\" or if you are providing real goods and services.)"),
  'help for charge' => t("Charge examples: 12.34 from 413.772.0000 | 12.34 from wgabcd for cash | 12.34 from jdough@example.com for wine and cheese (Include a description ONLY if it's \"cash\" or if real goods and services are provided.)"),
  'help for undo' => t("Examples: undo | undo to | undo 413.772.0000 | undo from wgabcd"),
  'help for get' => t("Examples: get r 12.34 | get usd 12.34"),
  'help for information' => t("Example: information (tells you your balance and the current demand for rCredits)"),
  'help for help' => t('Examples: @commands. For example, type "help undo".'),
  
  // error messages
  'syntax' => t('Syntax error.'),
//  'no SMS permission' => t('Alas, you do not have permission to use the rCredits SMS interface at this time.'), // UNUSED
  "can't cash incentives" => t("You can spend your incentive rewards (@rewards to date), but you can't cash them out. Your balance available to exchange for US Dollars is @available."),
//  "can't cash incentives" => t("Once you are an active participant, you can spend your incentive rewards (@balance to date), but you can't cash them out. Your balance available to exchange for US Dollars is $0."),
//  'get r/usd' => t('You can get only "r" or "usd" (rCredits or US Dollars).'), // not yet used (maybe used when there is a third option)
  'not a feature' => t('"@param" is not a feature.'),
  'wrong nonce' => t('That is not the expected confirmation response. Start over and try again.'),
);

$GLOBALS['SMS messages']['help for help no-error'] = t('Try something! ') . $GLOBALS['SMS messages']['help for help'];

/**
 * rSMS text
 *
 * Get the long version of the indicated message(s), make any substitutions,
 * and return the result.
 *
 * @param string $message
 *   name of the message (index into $GLOBALS['SMS messages'])
 *   may be a list of message indices, separated by "|"
 *
 * @param array $substitutions (optional)
 */   
function rsms_t($message, $substitutions = array()) {

  $messages = explode('|', $message);
  $result = array();
  foreach ($messages as $message) {
    $result[] = t($GLOBALS['SMS messages'][$message], $substitutions);
  }
  return join(' ', $result);
}

/**
 * implements hook_form_alter, to set focus
 *
 * Insert a snippet of javascript in the page footer, to set the focus automatically
 * on the message field of the SMS simulation form.
 */
function rsms_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'sms_devel_receive_form') {
    drupal_add_js("document.getElementById('edit-message').focus();", array('type'=>'inline', 'scope'=>'footer'));  
  }
}

/**
 * implements hook_permissions
 */
function rsms_permission() {
  return array(
    'Transact via SMS' => array(
      'title' => t('Transact via SMS'),
      'description' => t("Transfer funds and get account information through the SMS Interface"),
    )
  );
}

// delete this?
function rsms_settings(){
  $form['responses'] = array(
    '#title' => t('SMS Settings'),
    '#description' => t('You cannot change the SMS syntax here.'),
    '#type' => 'fieldset',
    '#weight' => -2
  );
  return system_settings_form($form);
}

/**
 * SMS Incoming implements hook sms_incoming
 *
 * @param $op
 *   'pre process', 'process', 'post process'
 *
 * @param string $number
 *   the calling phone number
 *
 * @param string $message
 *   the incoming message
 */
function rsms_sms_incoming($op, $number, $message) {
  switch ($op) {
    case 'pre process':
      break;
    case 'process':
//	  $number = '4111111111'; // test unregistered phone number
      $call = new SMScall($number, $message);
      print_r($call);
      $call->send($number, RSMS_PREFIX_TRIAL . $call->handle_call());
      break;
    case 'post process':
      break;
  }
}

/**
 * this is for the demo only, should be in a separate module, really
 */
function rsms_form_sms_browser_gateway_incoming_form_alter(&$form, $form_state) {
  $form['number']['#access'] = user_access('edit all exchanges');
}

/**
 * check that the parsed trader is actually a user who is permitted to trade
 * this is similar to a function in user_chooser (???)
 */
function rsms_validate_trader($val) {
  if (($uid = rcredits_account_by_id($val))) return $uid;
  $uid = db_select('users', 'u')
  ->fields('u', array('uid'))
  ->condition('uid', 0, '!=')
  ->condition(db_or() // for rsms this should include just account_id, mobile (normalized), website (without www or http), and email
//    ->condition('account_id', $val) 
    ->condition('name', $val)
    ->condition('mail', $val)
  )
  ->execute()->fetchField();
  if ($uid) return $uid;
}

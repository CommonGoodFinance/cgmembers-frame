<?php
/**
 * @file
 *  Steps
 *
 * Provide step functions for functional testing.
 * This file is created automatically by the Gherkin compiler.
 *
 * Note, therefore, that most of this file might be changed automatically
 * when you run the compiler again. This @file header will not be affected,
 * but all of the function header comments are (re)generated automatically.
 *
 * Be assured that no functions will be deleted and the compiler will
 * never alter code within a function.
 *
 * You may also add statements just below this header (for example "use" and "require_once").
 */
use rCredits as r;
use rCredits\DB as db;
use rCredits\Testing as t;
use rCredits\Util as u;
use rCredits\Backend as be;

require_once __DIR__ . '/../rcredits.inc';
require_once __DIR__ . '/../rcredits-testing.inc';

/**
 * Add additional setup for any or all features or tests
 * The feature object contains information about the current feature and test, etc.
 */
function extraSetup($feature) {
  t\clear(TX_WEB);
}

/**
 * Modify the standard list of magic substitutions (the %parameters)
 */
function extraSubs(&$subs) {
  $subs['%dmy-2w'] = t\subAgo('%today-2w', '%d-%b-%Y');
  $subs['%dm-2w'] = t\subAgo('%today-2w', '%d-%b');
  $subs['%dmy'] = t\subAgo('%today', '%d-%b-%Y');
//  $subs['%replace_this'] = 'with this';
}


/**
 * members: (ARG)
 *
 * in: MAKE Changes Setup
 *     MAKE Checks Setup
 */
function members($list) {return t\members($list);}

/**
 * transactions: (ARG)
 *
 * in: MAKE Checks Setup
 */
function transactions($list) {return t\transactions($list);}

/**
 * usd transfers: (ARG)
 *
 * in: BOTH Checks AdminPrintsChecks
 */
function usdTransfers($tx) {return t\usdTransfers($tx);}

/**
 * member (ARG) visits page (ARG)
 *
 * in: MAKE Changes AMemberChangesSomeSettings
 *     MAKE Checks AdminPrintsChecks
 */
function memberVisitsPage($id, $page) {return t\memberVisitsPage($id, $page);}

/**
 * we show (ARG) with: (ARG)
 *
 * in: TEST Changes AMemberChangesSomeSettings
 *     TEST Checks AdminPrintsChecks
 */
function weShowWith($title, $content = FALSE, $showDebugs = TRUE) {
  return t\weShowWith($title, $content, $showDebugs);
}

/**
 * member (ARG) completes form (ARG) with values: (ARG)
 *
 * in: MAKE Changes AMemberChangesSomeSettings
 */
function memberCompletesFormWithValues($id, $page, $values) {return t\completeForm($id, $page, $values);}

/**
 * we show pdf with: (ARG)
 *
 * in: TEST Checks AdminPrintsChecks
 */
function weShowPdfWith($list) {
  global $testOnly, $pdfSays;
  $in = strip_tags(join(' ', @$pdfSays ?: []));
  $px = 0;
  foreach ($list as $k => $v) {
    foreach ($v as $one) {
      $p = strpos($in, $one, $px);
      if ($p === FALSE) return t\output("Can't find \"$one\" in \"$in\" starting at $px.");
      $px = $p + strlen($one);
    }
  }
  return TRUE;
}

/**
 * balances: (ARG)
 *
 * in: TEST Checks AdminPrintsChecks
 */
function balances($list) {return t\balances($list);}

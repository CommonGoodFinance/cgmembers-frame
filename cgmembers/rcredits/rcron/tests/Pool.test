<?php
//
// Feature: Pool
//   AS members of a community
//   WE WANT to pool our unused US Dollars
//   SO we can use them for something as a community, while losing nothing as individual account holders

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rcron.steps';

class rcronPool extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Pool';
  const FEATURE_NAME = 'rcron Test - Pool';
  const DESCRIPTION = 'Pool';
  const MODULE = 'rcron';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rcron.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName   | email | flags      |'
    . '\\| .ZZA | Abe One    | a@    | ok,dw,bona |'
    . '\\| .ZZB | Bea Two    | b@    | ok,dw,bona |'
    . '\\| .ZZC | Corner Pub | c@    | ok,dw,co   |"');
    And__('transactions: "ASSOC'
    . '\\| xid | created   | type     | amount | from | to   | purpose |'
    . '\\|   1 | %today-6m | signup   |     25 | ctty | .ZZC | signup  |"');
    And__('balances: "ASSOC'
    . '\\| id   | r   | usd |'
    . '\\| ctty | -25 |   0 |'
    . '\\| .ZZA |   0 |  25 |'
    . '\\| .ZZB |   0 |  10 |'
    . '\\| .ZZC |  25 |  80 |"');
    And__('members have: "ASSOC'
    . '\\| id   | usdAccount |'
    . '\\| ctty | cttyAcct   |"');
    break;


    }
  }

  // Scenario: Normal pooling happens
  public function testNormalPoolingHappens_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('cron runs "pool"');
    Then_('balances: "ASSOC'
    . '\\| id   | r   | usd |'
    . '\\| ctty | -45 |  20 |'
    . '\\| .ZZA |  10 |  15 |'
    . '\\| .ZZB |   0 |  10 |'
    . '\\| .ZZC |  35 |  70 |"');
  }

}
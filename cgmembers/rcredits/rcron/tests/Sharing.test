<?php
//
// Feature: Sharing
//   AS a member
//   I WANT to contribute part of my rebates and bonuses to CGF monthly
//   SO CGF can continue to promote and maintain the rCredits system for my benefit and everyone's

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rcron.steps';

class rcronSharing extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Sharing';
  const FEATURE_NAME = 'rcron Test - Sharing';
  const DESCRIPTION = 'Sharing';
  const MODULE = 'rcron';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rcron.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "DATA'
    . '\\| id   | fullName   | floor | acctType      | flags                        | share |'
    . '\\| .ZZA | Abe One    | -100  | %R_PERSONAL   | dft,ok,personal,bona         |    50 |'
    . '\\| .ZZB | Bea Two    | -200  | %R_PERSONAL   | dft,ok,personal,company,bona |    10 |'
    . '\\| .ZZC | Corner Pub | -300  | %R_COMMERCIAL | dft,ok,company,bona          |     0 |"');
    When_('transactions: "DATA'
    . '\\| xid | created | type     | state    | amount | r   | from | to   | purpose |'
    . '\\|   1 | %today  | transfer | done     |     40 |  40 | .ZZA | .ZZB | what G  |'
    . '\\|   2 | %today  | rebate   | done     |      2 |   2 | ctty | .ZZA | rebate  |'
    . '\\|   3 | %today  | bonus    | done     |      4 |   4 | ctty | .ZZB | bonus   |"');
    break;


    }
  }

  // Scenario: Inflation adjustments are distributed
  public function testInflationAdjustmentsAreDistributed_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('cron runs "lessOften"');
    Then_('gifts: "DATA'
    . '\\| id   | giftDate | amount | often | honor  | share |'
    . '\\| .ZZA | %today   |      1 |     1 | share  |    -1 |'
    . '\\| .ZZB | %today   |   0.40 |     1 | share  |    -1 |"');
    And__('balances: "DATA'
    . '\\| id   | committed |'
    . '\\| .ZZA |         0 |'
    . '\\| .ZZB |         0 |"');
    When_('cron runs "gifts"');
    Then_('transactions: "DATA'
    . '\\| xid | created| type     | state | amount | from | to   | purpose |'
    . '\\|   4 | %today | transfer | done  |      1 | .ZZA | cgf | sharing rewards with CGF |'
    . '\\|   7 | %today | transfer | done  |   0.40 | .ZZB | cgf | sharing rewards with CGF |"');
  }

}
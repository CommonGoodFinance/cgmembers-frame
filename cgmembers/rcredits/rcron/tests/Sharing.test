<?php
//
// Feature: Sharing
//   AS a member
//   I WANT to donate part of my rebates and bonuses to CGF monthly
//   SO CGF can continue to promote and maintain the rCredits system for my benefit and everyone's

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rcron.steps';

class rcronSharing extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'Sharing';
  const FEATURE_NAME = 'rcron Test - Sharing';
  const DESCRIPTION = 'Sharing';
  const MODULE = 'rcron';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp() {} // must be compatible with DrupalWebTestCase::setUp()
  
  public function setUp2($sceneName, $variant = '') {
    global $sceneTest; $sceneTest = $this;
    global $testModule; $testModule = self::MODULE;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rcron.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "ASSOC'
    . '\\| id   | fullName   | floor | acctType    | flags                  | share | rebate |'
    . '\\| .ZZA | Abe One    | -100  | personal    | ok,confirmed,bona,debt |    50 |      5 |'
    . '\\| .ZZB | Bea Two    | -200  | personal    | ok,confirmed,co,bona   |    10 |     10 |'
    . '\\| .ZZC | Corner Pub | -300  | corporation | ok,confirmed,co,bona   |     0 |     10 |"');
    When_('transactions: "ASSOC'
    . '\\| xid | created | type     | amount | from | to   | purpose |'
    . '\\|   1 | %today  | transfer |     40 | .ZZA | .ZZB | what G  |'
    . '\\|   2 | %today  | rebate   |      2 | ctty | .ZZA | rebate on #1 |'
    . '\\|   3 | %today  | bonus    |      4 | ctty | .ZZB | bonus on #1  |"');
    break;


    }
  }

  // Scenario: members share their transaction rewards
  public function testMembersShareTheirTransactionRewards_0() {
    $this->setUp2(__FUNCTION__, 0);
    When_('cron runs "lessOften"');
    Then_('gifts: "ASSOC'
    . '\\| id   | giftDate | amount | often | honor  | share |'
    . '\\| .ZZA | %today   |      1 |     1 | share  |    -1 |'
    . '\\| .ZZB | %today   |   0.40 |     1 | share  |    -1 |"');
    And__('we notice "share gift" to member ".ZZA" with subs: "ASSOC'
    . '\\| share |'
    . '\\| 50    |"');
    And__('we notice "share gift" to member ".ZZB" with subs: "ASSOC'
    . '\\| share |'
    . '\\| 10    |"');
    And__('balances: "ASSOC'
    . '\\| id   | committed |'
    . '\\| .ZZA |         0 |'
    . '\\| .ZZB |         0 |"');
    When_('cron runs "gifts"');
    Then_('transactions: "ASSOC'
    . '\\| xid | created| type     | amount | from | to   | purpose |'
    . '\\|   4 | %today | transfer |      1 | .ZZA | cgf | sharing rewards with CGF |'
    . '\\|   7 | %today | transfer |   0.40 | .ZZB | cgf | sharing rewards with CGF |"');
    And__('we notice "gift sent" to member ".ZZA" with subs: "ASSOC'
    . '\\| amount | rewardAmount |'
    . '\\| $1     | $0.05        |"');
    And__('we notice "gift sent" to member ".ZZB" with subs: "ASSOC'
    . '\\| amount | rewardAmount |'
    . '\\| $0.40  | $0.04        |"');
  }

}
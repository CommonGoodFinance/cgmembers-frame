<?php
//
// Feature: Undo Completed Transaction
//   AS a member
//   I WANT to undo a transaction recently completed on my account
//   SO I can easily correct a mistake
//   Summary:
//   A member asks to undo a completed payment
//   A member confirms request to undo a completed payment
//   A member asks to undo a completed charge
//   A member confirms request to undo a completed charge
//   A member asks to undo a completed cash payment
//   A member confirms request to undo a completed cash payment
//   A member asks to undo a completed cash charge
//   A member confirms request to undo a completed cash charge
//   A member confirms request to undo a completed payment unilaterally
//   A member asks to undo a completed payment, with insufficient balance
//   A member confirms request to undo a completed payment, with insufficient balance
//   A member asks to undo a completed charge unilaterally, with insufficient balance
//   A member confirms request to undo a completed charge unilaterally, with insufficient balance

require_once __DIR__ . '/../../../gherkin/test-defs.php';
require_once __DIR__ . '/../rsmart.steps';

class rsmartUndoCompleted extends DrupalWebTestCase {
  var $subs; // percent parameters (to Given(), etc.) and their replacements (eg: %random1 becomes some random string)
  var $sceneName;
  const SHORT_NAME = 'UndoCompleted';
  const FEATURE_NAME = 'rsmart Test - UndoCompleted';
  const DESCRIPTION = 'Undo Completed Transaction';
  const MODULE = 'rsmart';

  public function gherkin($statement, $type) {
    $this->assertTrue(gherkinGuts($statement, $type), $statement, $this->sceneName);
  }
  
  public static function getInfo() {
    return array(
      'short_name' => self::SHORT_NAME,
      'name' => self::FEATURE_NAME,
      'description' => self::DESCRIPTION,
      'group' => ucwords(self::MODULE)
    );
  }

  public function setUp($sceneName, $variant = '') { // especially, enable any modules required for the tests
    global $sceneTest; $sceneTest = $this;
    parent::setUp(self::MODULE);

    $this->subs = usualSubs();
    $this->sceneName = __FUNCTION__;
    if (function_exists('extraSetup')) extraSetup($this); // defined in rsmart.steps
    $this->sceneName = $sceneName;

    switch ($variant) {
    default: // fall through to case(0)
    case(0):
    Given('members: "DATA'
    . '\\| id      | full_name  | phone  | email         | city  | state  | country       |'
    . '\\| NEW.ZZA | Abe One    | +20001 | a@example.com | Atown | Alaska | United States |'
    . '\\| NEW.ZZB | Bea Two    | +20002 | b@example.com | Btown | Utah   | United States |'
    . '\\| NEW.ZZC | Corner Pub | +20003 | c@example.com | Ctown | Corse  | France        |"');
    And__('devices: "DATA'
    . '\\| id      | code  |'
    . '\\| NEW.ZZA | codeA |'
    . '\\| NEW.ZZB | codeB |'
    . '\\| NEW.ZZC | codeC |"');
    And__('relations: "DATA'
    . '\\| id      | main    | agent   | permission   |'
    . '\\| NEW:ZZA | NEW.ZZA | NEW.ZZB | buy and sell |'
    . '\\| NEW:ZZB | NEW.ZZB | NEW.ZZA |              |'
    . '\\| NEW:ZZC | NEW.ZZC | NEW.ZZB | buy and sell |'
    . '\\| NEW:ZZD | NEW.ZZC | NEW.ZZA | sell         |"');
    And__('transactions: "DATA'
    . '\\| tx_id    | created   | type         | state       | amount | from      | to      | purpose      | taking |'
    . '\\| NEW.AAAB | %today-7m | %TX_SIGNUP   | %TX_DONE    |    250 | community | NEW.ZZA | signup       | 000000 |'
    . '\\| NEW.AAAC | %today-6m | %TX_SIGNUP   | %TX_DONE    |    250 | community | NEW.ZZB | signup       | 000000 |'
    . '\\| NEW.AAAD | %today-6m | %TX_SIGNUP   | %TX_DONE    |    250 | community | NEW.ZZC | signup       | 000000 |'
    . '\\| NEW.AAAE | %today-2m | %TX_TRANSFER | %TX_DONE    |     10 | NEW.ZZB   | NEW.ZZA | cash E       | 000000 |'
    . '\\| NEW.AAAF | %today-3w | %TX_TRANSFER | %TX_DONE    |     20 | NEW.ZZC   | NEW.ZZA | usd F        | 000000 |'
    . '\\| NEW.AAAG | %today-3d | %TX_TRANSFER | %TX_DONE    |     40 | NEW.ZZA   | NEW.ZZB | whatever43   | 000000 |'
    . '\\| NEW.AAAH | %today-3d | %TX_REBATE   | %TX_DONE    |      2 | community | NEW.ZZA | rebate on #4 | 000000 |'
    . '\\| NEW.AAAI | %today-3d | %TX_BONUS    | %TX_DONE    |      4 | community | NEW.ZZB | bonus on #3  | 000000 |'
    . '\\| NEW.AAAJ | %today-2d | %TX_TRANSFER | %TX_DONE    |      5 | NEW.ZZB   | NEW.ZZC | cash J       | 000000 |'
    . '\\| NEW.AAAK | %today-1d | %TX_TRANSFER | %TX_DONE    |     80 | NEW.ZZA   | NEW.ZZC | whatever54   | 000000 |'
    . '\\| NEW.AAAL | %today-1d | %TX_REBATE   | %TX_DONE    |      4 | community | NEW.ZZA | rebate on #5 | 000000 |'
    . '\\| NEW.AAAM | %today-1d | %TX_BONUS    | %TX_DONE    |      8 | community | NEW.ZZC | bonus on #4  | 000000 |"');
    Then_('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
    break;

    case(1):
    Given('members: "DATA'
    . '\\| id      | full_name  | phone  | email         | city  | state  | country       |'
    . '\\| NEW.ZZA | Abe One    | +20001 | a@example.com | Atown | Alaska | United States |'
    . '\\| NEW.ZZB | Bea Two    | +20002 | b@example.com | Btown | Utah   | United States |'
    . '\\| NEW.ZZC | Corner Pub | +20003 | c@example.com | Ctown | Corse  | France        |"');
    And__('devices: "DATA'
    . '\\| id      | code  |'
    . '\\| NEW.ZZA | codeA |'
    . '\\| NEW.ZZB | codeB |'
    . '\\| NEW.ZZC | codeC |"');
    And__('relations: "DATA'
    . '\\| id      | main    | agent   | permission   |'
    . '\\| NEW:ZZA | NEW.ZZA | NEW.ZZB | buy and sell |'
    . '\\| NEW:ZZB | NEW.ZZB | NEW.ZZA |              |'
    . '\\| NEW:ZZC | NEW.ZZC | NEW.ZZB | buy and sell |'
    . '\\| NEW:ZZD | NEW.ZZC | NEW.ZZA | sell         |"');
    And__('transactions: "DATA'
    . '\\| tx_id    | created   | type         | state       | amount | from      | to      | purpose      | taking |'
    . '\\| NEW.AAAB | %today-7m | %TX_SIGNUP   | %TX_DISPUTED    |    250 | community | NEW.ZZA | signup       | 000000 |'
    . '\\| NEW.AAAC | %today-6m | %TX_SIGNUP   | %TX_DISPUTED    |    250 | community | NEW.ZZB | signup       | 000000 |'
    . '\\| NEW.AAAD | %today-6m | %TX_SIGNUP   | %TX_DISPUTED    |    250 | community | NEW.ZZC | signup       | 000000 |'
    . '\\| NEW.AAAE | %today-2m | %TX_TRANSFER | %TX_DISPUTED    |     10 | NEW.ZZB   | NEW.ZZA | cash E       | 000000 |'
    . '\\| NEW.AAAF | %today-3w | %TX_TRANSFER | %TX_DISPUTED    |     20 | NEW.ZZC   | NEW.ZZA | usd F        | 000000 |'
    . '\\| NEW.AAAG | %today-3d | %TX_TRANSFER | %TX_DISPUTED    |     40 | NEW.ZZA   | NEW.ZZB | whatever43   | 000000 |'
    . '\\| NEW.AAAH | %today-3d | %TX_REBATE   | %TX_DISPUTED    |      2 | community | NEW.ZZA | rebate on #4 | 000000 |'
    . '\\| NEW.AAAI | %today-3d | %TX_BONUS    | %TX_DISPUTED    |      4 | community | NEW.ZZB | bonus on #3  | 000000 |'
    . '\\| NEW.AAAJ | %today-2d | %TX_TRANSFER | %TX_DISPUTED    |      5 | NEW.ZZB   | NEW.ZZC | cash J       | 000000 |'
    . '\\| NEW.AAAK | %today-1d | %TX_TRANSFER | %TX_DISPUTED    |     80 | NEW.ZZA   | NEW.ZZC | whatever54   | 000000 |'
    . '\\| NEW.AAAL | %today-1d | %TX_REBATE   | %TX_DISPUTED    |      4 | community | NEW.ZZA | rebate on #5 | 000000 |'
    . '\\| NEW.AAAM | %today-1d | %TX_BONUS    | %TX_DISPUTED    |      8 | community | NEW.ZZC | bonus on #4  | 000000 |"');
    Then_('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
    break;

    case(3):
    Given('members: "DATA'
    . '\\| id      | full_name  | phone  | email         | city  | state  | country       |'
    . '\\| NEW.ZZA | Abe One    | +20001 | a@example.com | Atown | Alaska | United States |'
    . '\\| NEW.ZZB | Bea Two    | +20002 | b@example.com | Btown | Utah   | United States |'
    . '\\| NEW.ZZC | Corner Pub | +20003 | c@example.com | Ctown | Corse  | France        |"');
    And__('devices: "DATA'
    . '\\| id      | code  |'
    . '\\| NEW.ZZA | codeA |'
    . '\\| NEW.ZZB | codeB |'
    . '\\| NEW.ZZC | codeC |"');
    And__('relations: "DATA'
    . '\\| id      | main    | agent   | permission   |'
    . '\\| NEW:ZZA | NEW.ZZA | NEW.ZZB | buy and sell |'
    . '\\| NEW:ZZB | NEW.ZZB | NEW.ZZA |              |'
    . '\\| NEW:ZZC | NEW.ZZC | NEW.ZZB | buy and sell |'
    . '\\| NEW:ZZD | NEW.ZZC | NEW.ZZA | sell         |"');
    And__('transactions: "DATA'
    . '\\| tx_id    | created   | type         | state       | amount | from      | to      | purpose      | taking |'
    . '\\| NEW.AAAB | %today-7m | %TX_SIGNUP   | %TX_DONE    |    250 | community | NEW.ZZA | signup       | 10 |'
    . '\\| NEW.AAAC | %today-6m | %TX_SIGNUP   | %TX_DONE    |    250 | community | NEW.ZZB | signup       | 10 |'
    . '\\| NEW.AAAD | %today-6m | %TX_SIGNUP   | %TX_DONE    |    250 | community | NEW.ZZC | signup       | 10 |'
    . '\\| NEW.AAAE | %today-2m | %TX_TRANSFER | %TX_DONE    |     10 | NEW.ZZB   | NEW.ZZA | cash E       | 10 |'
    . '\\| NEW.AAAF | %today-3w | %TX_TRANSFER | %TX_DONE    |     20 | NEW.ZZC   | NEW.ZZA | usd F        | 10 |'
    . '\\| NEW.AAAG | %today-3d | %TX_TRANSFER | %TX_DONE    |     40 | NEW.ZZA   | NEW.ZZB | whatever43   | 10 |'
    . '\\| NEW.AAAH | %today-3d | %TX_REBATE   | %TX_DONE    |      2 | community | NEW.ZZA | rebate on #4 | 10 |'
    . '\\| NEW.AAAI | %today-3d | %TX_BONUS    | %TX_DONE    |      4 | community | NEW.ZZB | bonus on #3  | 10 |'
    . '\\| NEW.AAAJ | %today-2d | %TX_TRANSFER | %TX_DONE    |      5 | NEW.ZZB   | NEW.ZZC | cash J       | 10 |'
    . '\\| NEW.AAAK | %today-1d | %TX_TRANSFER | %TX_DONE    |     80 | NEW.ZZA   | NEW.ZZC | whatever54   | 10 |'
    . '\\| NEW.AAAL | %today-1d | %TX_REBATE   | %TX_DONE    |      4 | community | NEW.ZZA | rebate on #5 | 10 |'
    . '\\| NEW.AAAM | %today-1d | %TX_BONUS    | %TX_DONE    |      8 | community | NEW.ZZC | bonus on #4  | 10 |"');
    Then_('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
    break;


    }
  }

  // Scenario: A member asks to undo a completed payment
  public function testAMemberAsksToUndoACompletedPayment_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom  | otherName | purpose    |'
    . '\\| %today-1d | $80    | to      | Corner Pub | whatever54 |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member confirms request to undo a completed payment
  public function testAMemberConfirmsRequestToUndoACompletedPayment_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 166 other_balance "" and message "report undo|report invoice" with subs: "DATA'
    . '\\| solution | action  | otherName | amount | tid |'
    . '\\| reversed | charged | Corner Pub | $80    | 6   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Abe One   | $80    | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member asks to undo a completed charge
  public function testAMemberAsksToUndoACompletedCharge_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAK", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom  | otherName | purpose    |'
    . '\\| %today-1d | $80    | from    | Abe One   | whatever54 |"');
  }

  // Scenario: A member confirms request to undo a completed charge
  public function testAMemberConfirmsRequestToUndoACompletedCharge_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 235 other_balance "" and message "report undo|report transaction" with subs: "DATA'
    . '\\| solution | action | otherName | amount | tid | rewardType | rewardAmount | balance |'
    . '\\| reversed | paid   | Abe One    | $80    | 5   | rebate      | $-8           | $235    |"');
    And__('we email "new-payment" to member "a@example.com" with subs: "DATA'
    . '\\| created | fullName | otherName  | amount | payeePurpose |'
    . '\\| %today  | Abe One  | Corner Pub | $80    | reverses #5  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -756 |'
    . '\\| NEW.ZZA   |     242 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     235 |"');
  }

  // Scenario: A member asks to undo a completed cash payment
  public function testAMemberAsksToUndoACompletedCashPayment_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZB" asks device "codeB" to undo transaction "NEW.AAAJ", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom | otherName  | purpose |'
    . '\\| %today-2d | $5     | to     | Corner Pub | cash J  |"');
  }

  // Scenario: A member confirms request to undo a completed cash payment
  public function testAMemberConfirmsRequestToUndoACompletedCashPayment_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZB" asks device "codeB" to undo transaction "NEW.AAAJ", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 279 other_balance "" and message "report undo|report exchange request" with subs: "DATA'
    . '\\| solution | action  | otherName | amount | tid |'
    . '\\| reversed | charged | Corner Pub | $5     | 5   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Bea Two   | $5     | reverses #3  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member asks to undo a completed cash charge
  public function testAMemberAsksToUndoACompletedCashCharge_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAJ", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom | otherName | purpose |'
    . '\\| %today-2d | $5     | from   | Bea Two    | cash J  |"');
  }

  // Scenario: A member confirms request to undo a completed cash charge
  public function testAMemberConfirmsRequestToUndoACompletedCashCharge_0() {
    $this->setUp(__FUNCTION__, 0);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAJ", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 318 other_balance "" and message "report undo|report exchange" with subs: "DATA'
    . '\\| solution | action | otherName | amount | tid | balance |'
    . '\\| reversed | gave   | Bea Two   | $5     | 5   | $318    |"');
    And__('we email "new-payment" to member "b@example.com" with subs: "DATA'
    . '\\| created | fullName | otherName  | amount | payeePurpose |'
    . '\\| %today  | Bea Two  | Corner Pub | $5     | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     284 |'
    . '\\| NEW.ZZC   |     318 |"');
  }

  // Scenario: A member confirms request to undo a completed payment unilaterally
  public function testAMemberConfirmsRequestToUndoACompletedPaymentUnilaterally_0() {
    $this->setUp(__FUNCTION__, 0);
    Given('member "NEW.ZZA" can charge unilaterally');
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 242 other_balance 235 and message "report undo|report transaction" with subs: "DATA'
    . '\\| solution | action  | otherName  | amount | rewardType | rewardAmount | balance | tid |'
    . '\\| reversed | charged | Corner Pub | $80    | bonus      | $-4          | $242    | 6   |"');
    And__('we email "new-charge" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Abe One   | $80    | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -756 |'
    . '\\| NEW.ZZA   |     242 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     235 |"');
  }

  // Scenario: A member asks to undo a completed payment
  public function testAMemberAsksToUndoACompletedPayment_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom  | otherName | purpose    |'
    . '\\| %today-1d | $80    | to      | Corner Pub | whatever54 |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member confirms request to undo a completed payment
  public function testAMemberConfirmsRequestToUndoACompletedPayment_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 166 other_balance "" and message "report undo|report invoice" with subs: "DATA'
    . '\\| solution | action  | otherName | amount | tid |'
    . '\\| reversed | charged | Corner Pub | $80    | 6   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Abe One   | $80    | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member asks to undo a completed charge
  public function testAMemberAsksToUndoACompletedCharge_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAK", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom  | otherName | purpose    |'
    . '\\| %today-1d | $80    | from    | Abe One   | whatever54 |"');
  }

  // Scenario: A member confirms request to undo a completed charge
  public function testAMemberConfirmsRequestToUndoACompletedCharge_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 235 other_balance "" and message "report undo|report transaction" with subs: "DATA'
    . '\\| solution | action | otherName | amount | tid | rewardType | rewardAmount | balance |'
    . '\\| reversed | paid   | Abe One    | $80    | 5   | rebate      | $-8           | $235    |"');
    And__('we email "new-payment" to member "a@example.com" with subs: "DATA'
    . '\\| created | fullName | otherName  | amount | payeePurpose |'
    . '\\| %today  | Abe One  | Corner Pub | $80    | reverses #5  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -756 |'
    . '\\| NEW.ZZA   |     242 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     235 |"');
  }

  // Scenario: A member asks to undo a completed cash payment
  public function testAMemberAsksToUndoACompletedCashPayment_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZB" asks device "codeB" to undo transaction "NEW.AAAJ", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom | otherName  | purpose |'
    . '\\| %today-2d | $5     | to     | Corner Pub | cash J  |"');
  }

  // Scenario: A member confirms request to undo a completed cash payment
  public function testAMemberConfirmsRequestToUndoACompletedCashPayment_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZB" asks device "codeB" to undo transaction "NEW.AAAJ", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 279 other_balance "" and message "report undo|report exchange request" with subs: "DATA'
    . '\\| solution | action  | otherName | amount | tid |'
    . '\\| reversed | charged | Corner Pub | $5     | 5   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Bea Two   | $5     | reverses #3  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member asks to undo a completed cash charge
  public function testAMemberAsksToUndoACompletedCashCharge_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAJ", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom | otherName | purpose |'
    . '\\| %today-2d | $5     | from   | Bea Two    | cash J  |"');
  }

  // Scenario: A member confirms request to undo a completed cash charge
  public function testAMemberConfirmsRequestToUndoACompletedCashCharge_1() {
    $this->setUp(__FUNCTION__, 1);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAJ", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 318 other_balance "" and message "report undo|report exchange" with subs: "DATA'
    . '\\| solution | action | otherName | amount | tid | balance |'
    . '\\| reversed | gave   | Bea Two   | $5     | 5   | $318    |"');
    And__('we email "new-payment" to member "b@example.com" with subs: "DATA'
    . '\\| created | fullName | otherName  | amount | payeePurpose |'
    . '\\| %today  | Bea Two  | Corner Pub | $5     | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     284 |'
    . '\\| NEW.ZZC   |     318 |"');
  }

  // Scenario: A member confirms request to undo a completed payment unilaterally
  public function testAMemberConfirmsRequestToUndoACompletedPaymentUnilaterally_1() {
    $this->setUp(__FUNCTION__, 1);
    Given('member "NEW.ZZA" can charge unilaterally');
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 242 other_balance 235 and message "report undo|report transaction" with subs: "DATA'
    . '\\| solution | action  | otherName  | amount | rewardType | rewardAmount | balance | tid |'
    . '\\| reversed | charged | Corner Pub | $80    | bonus      | $-4          | $242    | 6   |"');
    And__('we email "new-charge" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Abe One   | $80    | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -756 |'
    . '\\| NEW.ZZA   |     242 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     235 |"');
  }

  // Scenario: A member asks to undo a completed payment
  public function testAMemberAsksToUndoACompletedPayment_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom  | otherName | purpose    |'
    . '\\| %today-1d | $80    | to      | Corner Pub | whatever54 |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member confirms request to undo a completed payment
  public function testAMemberConfirmsRequestToUndoACompletedPayment_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 166 other_balance "" and message "report undo|report invoice" with subs: "DATA'
    . '\\| solution | action  | otherName | amount | tid |'
    . '\\| reversed | charged | Corner Pub | $80    | 6   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Abe One   | $80    | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member asks to undo a completed charge
  public function testAMemberAsksToUndoACompletedCharge_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAK", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom  | otherName | purpose    |'
    . '\\| %today-1d | $80    | from    | Abe One   | whatever54 |"');
  }

  // Scenario: A member confirms request to undo a completed charge
  public function testAMemberConfirmsRequestToUndoACompletedCharge_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 235 other_balance "" and message "report undo|report transaction" with subs: "DATA'
    . '\\| solution | action | otherName | amount | tid | rewardType | rewardAmount | balance |'
    . '\\| reversed | paid   | Abe One    | $80    | 5   | rebate      | $-8           | $235    |"');
    And__('we email "new-payment" to member "a@example.com" with subs: "DATA'
    . '\\| created | fullName | otherName  | amount | payeePurpose |'
    . '\\| %today  | Abe One  | Corner Pub | $80    | reverses #5  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -756 |'
    . '\\| NEW.ZZA   |     242 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     235 |"');
  }

  // Scenario: A member asks to undo a completed cash payment
  public function testAMemberAsksToUndoACompletedCashPayment_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZB" asks device "codeB" to undo transaction "NEW.AAAJ", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom | otherName  | purpose |'
    . '\\| %today-2d | $5     | to     | Corner Pub | cash J  |"');
  }

  // Scenario: A member confirms request to undo a completed cash payment
  public function testAMemberConfirmsRequestToUndoACompletedCashPayment_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZB" asks device "codeB" to undo transaction "NEW.AAAJ", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 279 other_balance "" and message "report undo|report exchange request" with subs: "DATA'
    . '\\| solution | action  | otherName | amount | tid |'
    . '\\| reversed | charged | Corner Pub | $5     | 5   |"');
    And__('we email "new-invoice" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Bea Two   | $5     | reverses #3  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     323 |"');
  }

  // Scenario: A member asks to undo a completed cash charge
  public function testAMemberAsksToUndoACompletedCashCharge_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAJ", with the request "unconfirmed"');
    Then_('we respond with success 1, message "confirm undo", and subs: "DATA'
    . '\\| created   | amount | tofrom | otherName | purpose |'
    . '\\| %today-2d | $5     | from   | Bea Two    | cash J  |"');
  }

  // Scenario: A member confirms request to undo a completed cash charge
  public function testAMemberConfirmsRequestToUndoACompletedCashCharge_3() {
    $this->setUp(__FUNCTION__, 3);
    When_('member "NEW.ZZC" asks device "codeC" to undo transaction "NEW.AAAJ", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 318 other_balance "" and message "report undo|report exchange" with subs: "DATA'
    . '\\| solution | action | otherName | amount | tid | balance |'
    . '\\| reversed | gave   | Bea Two   | $5     | 5   | $318    |"');
    And__('we email "new-payment" to member "b@example.com" with subs: "DATA'
    . '\\| created | fullName | otherName  | amount | payeePurpose |'
    . '\\| %today  | Bea Two  | Corner Pub | $5     | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -768 |'
    . '\\| NEW.ZZA   |     166 |'
    . '\\| NEW.ZZB   |     284 |'
    . '\\| NEW.ZZC   |     318 |"');
  }

  // Scenario: A member confirms request to undo a completed payment unilaterally
  public function testAMemberConfirmsRequestToUndoACompletedPaymentUnilaterally_3() {
    $this->setUp(__FUNCTION__, 3);
    Given('member "NEW.ZZA" can charge unilaterally');
    When_('member "NEW.ZZA" asks device "codeA" to undo transaction "NEW.AAAK", with the request "confirmed"');
    Then_('we respond success 1 tx_id "NEW.AAAN" my_balance 242 other_balance 235 and message "report undo|report transaction" with subs: "DATA'
    . '\\| solution | action  | otherName  | amount | rewardType | rewardAmount | balance | tid |'
    . '\\| reversed | charged | Corner Pub | $80    | bonus      | $-4          | $242    | 6   |"');
    And__('we email "new-charge" to member "c@example.com" with subs: "DATA'
    . '\\| created | fullName   | otherName | amount | payerPurpose |'
    . '\\| %today  | Corner Pub | Abe One   | $80    | reverses #4  |"');
    And__('balances: "DATA'
    . '\\| id        | balance |'
    . '\\| community |    -756 |'
    . '\\| NEW.ZZA   |     242 |'
    . '\\| NEW.ZZB   |     279 |'
    . '\\| NEW.ZZC   |     235 |"');
  }

}
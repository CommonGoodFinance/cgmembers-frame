<?php
namespace CG\Web;
use CG\Web as w;
use CG as r;
use CG\DB as db;
use CG\Backend as be;
use CG\Util as u;

require_once __DIR__ . '/TxProcessor.interface';

/**
 * @file
 * Class to generate transaction history reports; extends 
 *
 */

class TxHistory implements TxProcessor {
  private $body = '';
  private $uids = [];
  private $tidValue = '';
  private $dateValue = '';
  private $count = 0;
  private $runBalance = 0;
  
  public function __construct($uids) {
    $this->uids = $uids;
  }
  
  /**
   * Called before the first transaction.
   */
  public function hdr() {
    /* global $mya, $agtViaBoxHelp; */


    /* $helpFields = 'tid date state purpose name amount fromyou toyou buttons net' . (@$agtViaBoxHelp ? ' agent channel box' : ''); */

    /* $headHelp = array_combine(ray($helpFields), ray($headHelp)); */
    /* $classes = 'tid date name purpose amount fromyou toyou net buttons'; */
    /* $headers = t('Tx#,Date,Name,Purpose,Amount,From You, To You,Net,Action'); */
    
    /* $header = array_combine(ray($classes), ray($headers)); // make splices and additions easy and clear */
    /* if (@$agents) $header['agent'] = t('Agent'); */
    /* if (@$channels) $header['channel'] = t('Via'); */
    /* if (@$boxes) $header['box'] = t('Box'); */
    
    /* foreach ($header as $cls => $hdr) $header[$cls] = w\popHelp($hdr, $headHelp[$class]); */
    
    /* return array(array_keys($header), array_values($header), @array_values($downloadHeader)); */
    
    $tid = w\popHelp(t('Tx#'), t('Transaction number'));
    $date = w\popHelp(t('Date'), t('Date transaction was completed'));
    $name = w\popHelp(t('Name'), t('Who did you pay or receive from'));
    $purpose = w\popHelp(t('Purpose'), t('What is the purpose of the transaction (usually the item or service purchased)'));
    $amount = w\popHelp(t('Amount'), t('Amounts you spent or received'));
    /* $fromyou = w\popHelp(t('From You'), t('fromyou')); */
    /* $toyou = w\popHelp(t('To You'), t('toyou')); */
    /* $net = w\popHelp(t('Net'), t('The net change in account balance')); */
    $runBalance = w\popHelp(t('Balance'), t('The balance in the account after this transaction'));
    $buttons = w\popHelp(t('Action'), t('Click a symbol to reverse a transaction or to edit the purpose'));
    
    $this->body = <<<EOF
<div id="txlist">
  <div id="txs-links" class="row">
    <div class="showMore col-xs-3">
      <a title="Show more transactions per page"><span class="glyphicon glyphicon-plus"></span>Show more</a>
    </div>
    <div class="dates col-xs-2">
      <a title="Select dates to show"><span class="glyphicon glyphicon-calendar"></span>Dates</a>
    </div>
    <div class="download col-xs-3">
      <a title="Select dates and download as CSV file"><span class="glyphicon glyphicon-download-alt"></span>Download</a>
    </div>
    <div class="totals col-xs-2">
      <a data-toggle="modal" data-target="#txs-totals" title="Show totals for the selected period"><span class="glyphicon glyphicon-usd"></span>Totals</a>
    </div>
    <div class="nav col-xs-1">
      <a class="prevPage" title="Previous Page"><span class="glyphicon glyphicon-triangle-left"></span></a>
      <a class="nextPage" title="Next Page"><span class="glyphicon glyphicon-triangle-right"></span></a>
    </div>
  </div>
  <table>
    <thead>
      <tr><th>$tid</th><th>$date</th><th>$name</th><th>$purpose</th><th>$amount</th><th>$runBalance</th><th>$buttons</th></tr>
    </thead>
EOF;
  }

  /**
   * Called before each transaction.
   * @param assoc $info: all of the data for this entry (includes transaction data)
   */
  public function txnHdr($info) {
    $this->tidValue = $info['tid'];
    $this->dateValue = strftime('%m/%d/%y', $info['created']);
    $this->runBalance = u\fmtAmt($info['runBalance'], '');

    $class = "txrow ";
    $class .= 'page-' . floor($this->count / MIN_TX_ROWS);
    $class .= ' PAGE-' . floor($this->count / NORMAL_TX_ROWS);
    $this->body .= "<tbody class=\"$class\">\n";
  }

  /**
   * Called for each entry of a transaction.
   * @param assoc $info: all of the data for this entry (includes transaction data)
   */
  public function processEntry($info) {
    if (in_array($info['uid'], $this->uids)) return;
    extract(just('name description amount', $info));
    $amount = u\fmtAmt(- $amount, '');
    $buttons = '';

    $class = "txrow ";
    $class .= 'page-' . floor($this->count / MIN_TX_ROWS);
    $class .= ' PAGE-' . floor($this->count / NORMAL_TX_ROWS);

    $this->body .= <<<EOF
<tr class="$class">
  <td class="tid">$this->tidValue</td>
  <td class="date">$this->dateValue</td>
  <td class="name">$name</td>
  <td class="purpose">$description</td>
  <td class="amount">$amount</td>
  <td class="runBalance">$this->runBalance</td>
  <td class="buttons">$buttons</td>
</tr>
EOF;
/*     $this->body .= <<<EOF */
/* <tr> */
/*   <td class="tid col-sm-5">$this->tidValue</td> */
/*   <td class="date col-sm-7">$this->dateValue</td> */
/*   <td class="name col-sm-6">$name</td> */
/*   <td class="purpose col-sm-6">$description</td> */
/*   <td class="amount col-sm-5">$amount</td> */
/*   <td class="runBalance col-sm-7">$this->runBalance</td> */
/*   <td class="buttons col-xs-1">$buttons</td> */
/* </tr> */
/* EOF; */

    $this->tidValue = '';
    $this->dateValue = '';
    $this->runBalance = '';
  }

  /**
   * Called after each transaction.
   * @param assoc $info: all of the data for this entry (includes transaction data)
   */
  public function txnFtr($info) {
    $this->body .= "</tbody>\n";
    $this->count += 1;
  }

  /**
   * Called after the last transaction.
   */
  public function ftr() {
    if ($this->count < 1) {
      $this->body .= '<tr><td colspan=6>' . t('no txs') . '</td></tr>';
    }
    $this->body .= "</table>\n</div>\n";
  }

  /**
   * Get the built HTML
   */
  public function getBody() {
    return w\item($this->body);
  }
}

<?php
/**
 * @file
 * Install, update and uninstall functions for the rCredits module.
 */

use rCredits as r;
use r\Utilities as u;
use r\API as i; // get rid of this (used just once)

define('RCREDITS_TABLES', 'r_area_codes,r_credit_regions,r_nonces,r_txs,r_shared_accounts');

/**
 * Implement hook_install().
 *
 * Add custom data for the rCredits module.
 */
function rcredits_install() {
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('member'));
  
  r\make_fields();
//  r\make_currency();
  
  $name = RCREDITS_COMMUNITY_NAME;
  $credit_id = RCREDITS_COMMUNITY_ID;
  $credit_name = $name;
  $postal_code = RCREDITS_COMMUNITY_POSTAL_AREA;
  $demand = RCREDITS_INITIAL_DEMAND;
  $rebate_percent = 0;
  $info = compact(u\ray('name credit_id credit_name postal_code demand rebate_percent'));
  if ($uid = u\user_field('uid', "name = '$name'")) {
    $account = user_load($uid);
    user_save($account, $info);
  } else {
    $uid = i\create_user($info)->uid;
  }
  variable_set('rcredits_community_uid', $uid); // gets unset during uninstall
  variable_set('date_default_timezone', 'America/New_York');

  foreach (explode(',', RCREDITS_TABLES) as $table) {
    $filename = __DIR__ . "/sql/$table";
    if ($sql = @file_get_contents("$filename-make.sql")) db_query($sql); // read in a single CREATE TABLE (if exists) query
    if (!@r\db_lookup(1, "$table", 'TRUE') and file_exists("$filename-insert.sql")) {
	  $sql = file_get_contents("$filename-insert.sql"); // read in a single multi-record INSERT query
	  if (!db_query($sql)->rowCount()) die("Failed to insert records for $table.");
	}
  }
}

/**
 * Implements hook_schema().
 */
function rcredits_schema() {
  require_once 'rcredits.inc'; // Drupal bug. hook_schema needs this explicit.
  require_once 'rcredits-util.inc';

  $schema['r_txs'] = array(
    'description' => 'Record of all transactions in the region',
	'primary key' => array('xid'),
    'foreign keys' => array(
	  'payer' => array('table' => 'users', 'columns' => array('payer' => 'uid')),
	  'payee' => array('table' => 'users', 'columns' => array('payee' => 'uid')),
	  'creator' => array('table' => 'users', 'columns' => array('creator' => 'uid')),
	),
    'indexes' => array(
//	  'xid' => array('xid'), // not needed (see primary key)
	  'payer' => array('payer'), // not needed (see primary key)
	  'payee' => array('payee'), // not needed (see primary key)
    ),
  );
  
  r\setup_field($schema, 'r_txs', 'xid', 'the unique transaction ID', 'serial 11'); 
  r\setup_field($schema, 'r_txs', 'Serial', 'serial number of related transactions', 'int 11'); 
  r\setup_field($schema, 'r_txs', 'Type', 'transaction type (transfer, rebate, etc.)', 'int tiny'); 
//  r\setup_field($schema, 'r_txs', 'Is Reward', 'is this transaction an incentive reward?', 'int tiny'); 
  r\setup_field($schema, 'r_txs', 'Channel', 'through what medium was the transaction entered', 'int tiny'); 
  r\setup_field($schema, 'r_txs', 'State', 'completed, pending, disputed, etc', 'int tiny'); 
  r\setup_field($schema, 'r_txs', 'Payer', 'user id of the payer', 'int 11'); 
  r\setup_field($schema, 'r_txs', 'Payee', 'user id of the payee', 'int 11'); 
  r\setup_field($schema, 'r_txs', 'Amount', 'transaction amount', 'float big'); 
  r\setup_field($schema, 'r_txs', array('Description', 'payer_for'), "payer's description", 'varchar 60'); 
  r\setup_field($schema, 'r_txs', array('Description', 'payee_for'), "payee's description", 'varchar 60'); 
  r\setup_field($schema, 'r_txs', 'Data', 'info stored elsewhere, duplicated here for convenience (serialized array)', 'text tiny'); 
  r\setup_field($schema, 'r_txs', 'Creator', 'user id of the creator', 'int 11'); 
  r\setup_field($schema, 'r_txs', 'Created', 'Unixtime transaction was created', 'int 11'); 

  $schema['r_shared_accounts'] = array(
    'description' => 'Who can manage which accounts, and how',
	'primary key' => array('shared_uid', 'shared_with'),
    'foreign keys' => array(
	  'shared_uid' => array('table' => 'users', 'columns' => array('shared_uid' => 'uid')),
	  'shared_with' => array('table' => 'users', 'columns' => array('shared_with' => 'uid')),
	),
  );
  r\setup_field($schema, 'r_shared_accounts', 'Shared UID', 'uid of the account being shared', 'int 11');
  r\setup_field($schema, 'r_shared_accounts', 'Shared with', 'uid of a user that has access to that account', 'int 11');
  r\setup_field($schema, 'r_shared_accounts', 'Permission', 'what type of permission the shared_with user has on the shared_uid account', 'int tiny');
  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function rcredits_schema_alter(&$schema) {
  $users = $sms_user = $r_txs = array();

  r\setup_field($schema, 'users', 'Account type', 'personal, commercial, non-profit (or government)', 'int tiny');
  r\setup_field($schema, 'users', 'Federal ID', 'social security number or employer id number, for reporting', 'varchar 9');
  r\setup_field($schema, 'users', 'DOB', 'date of birth, founding, or incorporation', 'int 11');
  r\setup_field($schema, 'users', 'Full name', 'full name of the individual or entity', 'varchar 60');
  r\setup_field($schema, 'users', 'Short name', 'alphanumeric identifier with no spaces (internal)', 'varchar 60');
  r\setup_field($schema, 'users', 'Phone', 'contact phone (no country code, no punctuation)', 'varchar 255');
  r\setup_field($schema, 'users', 'Fax', 'fax number (no country code, no punctuation)', 'varchar 255');
  r\setup_field($schema, 'users', 'Address', 'postal street address', 'varchar 60');
  r\setup_field($schema, 'users', 'City', 'municipality', 'varchar 60');
  r\setup_field($schema, 'users', 'State', 'full state/province name', 'varchar 60'); // varchar because char is deprecated
  r\setup_field($schema, 'users', 'Postal code', 'contact postal code (no punctuation)', 'varchar 20');
  r\setup_field($schema, 'users', 'Country', 'full country name', 'varchar 60');
  r\setup_field($schema, 'users', 'Website', 'primary website', 'varchar 255');
//  r\setup_field($schema, 'users', 'Categories', 'business categories', 'text medium', '', '100'); // serialized array
  r\setup_field($schema, 'users', 'Notes', 'miscellaneous notes about the user or the account', 'text medium');

  // actually these are credit account fields, but in the user table for now (any user with a credit id is a trading account)
  r\setup_field($schema, 'users', 'Credit id', 'unique credit account identifier (8 characters for individuals)', 'varchar 9');
  r\setup_field($schema, 'users', 'Rebate percent', 'current rebate percentage (sales bonus is double)', 'numeric 4,3', 5);
  r\setup_field($schema, 'users', 'Demand', 'waiting to buy this much credit', 'numeric 9,2', 0);
  r\setup_field($schema, 'users', 'Min balance', 'minimum balance (normally zero or less)', 'numeric 9,2', RCREDITS_MIN_BALANCE);
  r\setup_field($schema, 'users', 'Lost card', 'user lost the account id card', 'int tiny', 0, '010');
  r\setup_field($schema, 'users', 'Bank account number', 'official currency international bank account number', 'varchar 34');
  r\setup_field($schema, 'users', 'Bank account name', 'name on US$ bank account -- usually the same as name', 'varchar 60');
  r\setup_field($schema, 'users', 'Bank account verified', 'user has proven ownership of account', 'int tiny', 0, '010');
  
  r\setup_field($schema, 'sms_user', 'todo', 'waiting for confirmation to complete this operation', 'text medium');
  r\setup_field($schema, 'sms_user', 'nonce', 'waiting for this nonce, for confirmation', 'varchar 10');
  
  /*  
  r\setup_field($schema, 'r_area_codes', 'Area Code', 'telephone area code', 'char 3'); 
  r\setup_field($schema, 'r_area_codes', 'Region', 'state, province, or territory', 'varchar 24'); 
  
  r\setup_field($schema, 'r_credit_regions', 'Region', 'state or province', 'char 2');
  r\setup_field($schema, 'r_credit_regions', 'Credit Region', 'credit region id', 'char 2');
  */
}
 
/**
 * Implements hook_uninstall().
 */
function rcredits_uninstall() {
  require_once 'rcredits.inc'; // Drupal bug. Uninstall needs this explicit.
  require_once 'rcredits-util.inc';

  $old_fields = array(
    'users' => u\ray('first_name last_name credit_name can_charge can_vote can_trade is_committed'),
  );
  r\make_fields('UNMAKE', $old_fields);
// (DON'T DELETE record!)  if ($who = variable_set('rcredits_community_uid')) db_query("DELETE FROM users WHERE uid = $who");

  db_query('DROP TABLE IF EXISTS ' . RCREDITS_TABLES . ',r_credit_tails');
}

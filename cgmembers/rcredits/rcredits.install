<?php
/**
 * @file
 * Install, update and uninstall functions for the rCredits module.
 */

use rCredits as r;
use rCredits\Utilities as u;
use rCredits\API as api;

define('R_TABLES', 'r_area_codes,r_credit_regions,r_nonces,r_txs,r_asif,r_relations,r_industries,r_user_industries');

/**
 * Implement hook_install().
 *
 * Add custom data for the rCredits module.
 */
function rcredits_install() {
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('member'));
  
  r\make_fields();
//  r\make_currency();
  
  $full_name = R_REGION_NAME;
//  $credit_id = R_SERVER_ID;
  $postal_code = R_REGION_POSTAL_AREA;
  $demand = R_INITIAL_DEMAND;
  $rebate_percent = 0;
  $name = $short_name = 'community';
  $info = compact(u\ray('full_name short_name postal_code demand rebate_percent'));

  if ($account = user_load_by_name($name)) {
    user_save($account, $info);
    $uid = $account->uid;
  } else $uid = api\create_user($info)->uid;

  variable_set('rcredits_community_uid', $uid); // gets unset during uninstall
  variable_set('date_default_timezone', 'America/New_York');
// NO. This creates a navigation column.  variable_set('site_frontpage', 'charge');

  $tables = explode(',', R_TABLES . ',role'); // we also add records to some standard Drupal tables
  foreach ($tables as $table) {
    $filename = __DIR__ . "/sql/$table";
    if ($sql = @file_get_contents("$filename-make.sql")) db_query($sql); // read in a single CREATE TABLE (if exists) query
    if (!@r\db_lookup(1, "$table", 'TRUE') and file_exists("$filename-insert.sql")) {
      $sql = file_get_contents("$filename-insert.sql"); // read in a single multi-record INSERT query
      if (!db_query($sql)->rowCount()) die("Failed to insert records for $table.");
	  }
  }
}

/**
 * Implements hook_schema().
 */
function rcredits_schema() {
  require_once 'rcredits.inc'; // Drupal bug. hook_schema needs this explicit.
  require_once 'rcredits-util.inc';

  // table r_txs (and r_asif)
  $fields = array(
    'xid' => r\setup_field('the unique transaction ID', 'serial 11'), 
    'serial' => r\setup_field('serial number of related transactions', 'int 11'), 
    'type' => r\setup_field('transaction type (transfer, rebate, etc.)', 'int tiny'), 
    'goods' => r\setup_field('is this transfer and exchange for real goods and services?', 'int tiny'), 
    'channel' => r\setup_field('through what medium was the transaction entered', 'int tiny'), 
    'state' => r\setup_field('completed, pending, disputed, etc', 'int tiny'), 
    'payer' => r\setup_field('user id of the payer', 'int 11'), 
    'payee' => r\setup_field('user id of the payee', 'int 11'), 
    'amount' => r\setup_field('transaction amount', 'float big'), 
    'payer_for' => r\setup_field("payer's description", 'varchar 60'), 
    'payee_for' => r\setup_field("payee's description", 'varchar 60'), 
    'data' => r\setup_field('info stored elsewhere, duplicated here for convenience (serialized array)', 'text tiny'), 
    'creator' => r\setup_field('user id of the creator', 'int 11'), 
    'created' => r\setup_field('Unixtime transaction was created', 'int 11'), 
  );
  $foreign_keys = r\foreign_key('payer') + r\foreign_key('payee') + r\foreign_key('creator');
  $indexes = r\index('payer') + r\index('payee');
  $schema['r_txs'] = r\setup_table('Record of all rCredits transactions in the region', $fields, 'xid', $foreign_keys, $indexes);
  $schema['r_asif'] = r\setup_table('Record of pretend (asif) transactions in the region', $fields, 'xid', $foreign_keys, $indexes);

  // table r_relations
  $fields = array(
    'relid' => r\setup_field('relationship record id', 'serial 11'),
    'main_uid' => r\setup_field('uid of the account to which others are related', 'int 11'),
    'individual_uid' => r\setup_field('uid of a user related to that account', 'int 11'),
    'permission' => r\setup_field('what type of permission the individual has on the main account', 'int tiny'),
    'is_employee' => r\setup_field('is this person an employee', 'int tiny'),
    'is_owner' => r\setup_field('is this person an owner (or part owner)', 'int tiny'),
  );
  $foreign_keys = r\foreign_key('main_uid') + r\foreign_key('individual_uid');
  $indexes = r\index('main_uid') + r\index('individual_uid');
  $schema['r_relations'] = r\setup_table('Who can manage which accounts, and how', $fields, 'relid', $foreign_keys, $indexes);
    
  // table r_employs_temp (same as r_relations, but with extra fields -- used for candidates in rcredits-circles.inc)
  $fields = array(
    'ignore' => r\setup_field('temporarily omit this record from consideration', 'int tiny'),
    'employee_is_rtrader' => r\setup_field('this employee is an rTrader', 'int tiny'),
    'score' => r\setup_field('how good is this candidate', 'int 11'),
  );
  $schema['r_employs_temp'] = $schema['r_relations'];
  $schema['r_employs_temp']['fields'] += $fields;
  
  // table r_smarts
  $fields = array(
    'code' => r\setup_field('permanent secret identifier for the device', 'varchar 255'),
    'uid' => r\setup_field('uid of the smart device owner', 'int 11'),
    'device' => r\setup_field('human-readable identifier for the smart device', 'varchar 60'),
  );
  $foreign_keys = r\foreign_key('uid');
  $indexes = r\index('uid');
  $schema['r_smarts'] = r\setup_table('Who owns what smart device', $fields, 'code', $foreign_keys, $indexes);

  // table r_scores
  $fields = array(
    'company' => r\setup_field('uid of company', 'int 11'),
    'count' => r\setup_field('for the rTraders that have this many places to buy with rCredits', 'int 11'),
    'score' => r\setup_field('this many of those rTraders would buy from this company', 'int 11'),
  );
  $foreign_keys = r\foreign_key('company');
  $indexes = r\index('company');
  $schema['r_scores'] = r\setup_table('Best companies to promote to rTrader in the current round', $fields, NULL, $foreign_keys, $indexes);
  
  /*  
  r\setup_field($schema, 'r_area_codes', 'Area Code', 'telephone area code', 'char 3'); 
  r\setup_field($schema, 'r_area_codes', 'Region', 'state, province, or territory', 'varchar 24'); 
  
  r\setup_field($schema, 'r_credit_regions', 'Region', 'state or province', 'char 2');
  r\setup_field($schema, 'r_credit_regions', 'Credit Region', 'credit region id', 'char 2');
  */
  
  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function rcredits_schema_alter(&$schema) {
  $fields = array( // additional users fields
    'account_type' => r\setup_field('personal, commercial, non-profit (or government)', 'int tiny'),
    'federal_id' => r\setup_field('social security number or employer id number, for reporting', 'varchar 9'),
    'full_name' => r\setup_field('full name of the individual or entity', 'varchar 60'),
    'short_name' => r\setup_field('alphanumeric identifier with no spaces (internal)', 'varchar 60'),
    'phone' => r\setup_field('contact phone (no country code, no punctuation)', 'varchar 255'),
    'fax' => r\setup_field('fax number (no country code, no punctuation)', 'varchar 255'),
    'address' => r\setup_field('postal street address', 'varchar 60'),
    'city' => r\setup_field('municipality', 'varchar 60'),
    'state' => r\setup_field('full state/province name', 'varchar 60'), // varchar because char is deprecated
    'postal_code' => r\setup_field('contact postal code (no punctuation)', 'varchar 20'),
    'country' => r\setup_field('full country name', 'varchar 60'),
    'website' => r\setup_field('primary website', 'varchar 255'),
    'description' => r\setup_field('markup text describing the company (unused for personal accounts)', 'text medium'),
    'notes' => r\setup_field('miscellaneous notes about the user or the account', 'text medium'),
    'dob' => r\setup_field('date of birth, founding, or incorporation', 'int 11'),
    'rebate_percent' => r\setup_field('current rebate percentage (sales bonus is double)', 'numeric 4,3', 5),
    'demand' => r\setup_field('waiting to buy this much credit', 'numeric 9,2', 0),
    'min_balance' => r\setup_field('minimum balance (normally zero or less)', 'numeric 9,2', R_MIN_BALANCE),
// separate table for this? 'nym' => r\setup_field('unique identifier for cryptographic signing', 'text tiny'), 
    'bank_account_name' => r\setup_field('name on US$ bank account -- usually the same as full_name', 'varchar 60'),
    'bank_account_number' => r\setup_field('official currency international bank account number', 'varchar 34'),
    'bank_account_status' => r\setup_field('account ownership verified, closed, etc.', 'int tiny', 0, '010'),
  );
  $schema['users']['fields'] = (@$schema['users']['fields'] ?: array()) + $fields;
  $schema['users']['indexes'] = (@$schema['users']['indexes'] ?: array()) + r\index('short_name');

  
  $fields = array( // additional sms_user fields  
    'todo' => r\setup_field('waiting for confirmation to complete this operation', 'text medium'),
    'nonce' => r\setup_field('waiting for this nonce, for confirmation', 'varchar 10'),
  );
  $schema['sms_user']['fields'] = (@$schema['sms_user']['fields'] ?: array()) + $fields;
}
 
/**
 * Implements hook_uninstall().
 * Best not to use anything much here from other files.
 */
function rcredits_uninstall() {
  return; // don't do this, for a while (maybe ever)
  require_once 'rcredits.inc'; // Drupal bug. Uninstall needs this explicit.
  require_once 'rcredits-util.inc';

  $old_fields = array(
    'users' => explode(' ', 'first_name last_name credit_name can_charge can_vote can_trade is_committed'),
  );
  r\make_fields('UNMAKE', $old_fields);
// (DON'T DELETE record!)  if ($who = variable_set('rcredits_community_uid')) db_query("DELETE FROM users WHERE uid = $who");

  db_query('DROP TABLE IF EXISTS ' . R_TABLES . ',r_credit_tails');
}

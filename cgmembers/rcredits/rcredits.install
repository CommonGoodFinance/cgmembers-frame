<?php
/**
 * @file
 * Install, update and uninstall functions for the rCredits module.
 */

use rCredits as r;
use rCredits\Utilities as u;
use \rCredits\InternalInterface as ii;

define('RCREDITS_TABLES', 'r_area_codes,r_credit_regions,r_nonces,r_txs,r_shared_accounts,role');

/**
 * Implement hook_install().
 *
 * Add custom data for the rCredits module.
 */
function rcredits_install() {
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('member'));
  
  r\make_fields();
//  r\make_currency();
  
  $name = RCREDITS_COMMUNITY_NAME;
  $credit_id = RCREDITS_COMMUNITY_ID;
  $credit_name = $name;
  $postal_code = RCREDITS_COMMUNITY_POSTAL_AREA;
  $demand = RCREDITS_INITIAL_DEMAND;
  $rebate_percent = 0;
  $info = compact(u\ray('name credit_id credit_name postal_code demand rebate_percent'));
  if ($account = user_load_by_name($name)) {
    user_save($account, $info);
    $uid = $account->uid;
  } else $uid = api\create_user($info)->uid;

  variable_set('rcredits_community_uid', $uid); // gets unset during uninstall
  variable_set('date_default_timezone', 'America/New_York');

  foreach (explode(',', RCREDITS_TABLES) as $table) {
    $filename = __DIR__ . "/sql/$table";
    if ($sql = @file_get_contents("$filename-make.sql")) db_query($sql); // read in a single CREATE TABLE (if exists) query
    if (!@r\db_lookup(1, "$table", 'TRUE') and file_exists("$filename-insert.sql")) {
	  $sql = file_get_contents("$filename-insert.sql"); // read in a single multi-record INSERT query
	  if (!db_query($sql)->rowCount()) die("Failed to insert records for $table.");
	}
  }
}

/**
 * Implements hook_schema().
 */
function rcredits_schema() {
  require_once 'rcredits.inc'; // Drupal bug. hook_schema needs this explicit.
  require_once 'rcredits-util.inc';

  // table r_txs
  $fields = array(
    'xid' => r\setup_field('the unique transaction ID', 'serial 11'), 
    'serial' => r\setup_field('serial number of related transactions', 'int 11'), 
    'type' => r\setup_field('transaction type (transfer, rebate, etc.)', 'int tiny'), 
    //  r\setup_field('Is Reward', 'is this transaction an incentive reward?', 'int tiny'), 
    'channel' => r\setup_field('through what medium was the transaction entered', 'int tiny'), 
    'state' => r\setup_field('completed, pending, disputed, etc', 'int tiny'), 
    'real' => r\setup_field('transaction is real for 0=nobody 1=payer 2=payee 3=both', 'int tiny'), 
    'payer' => r\setup_field('user id of the payer', 'int 11'), 
    'payee' => r\setup_field('user id of the payee', 'int 11'), 
    'amount' => r\setup_field('transaction amount', 'float big'), 
    'payer_for' => r\setup_field("payer's description", 'varchar 60'), 
    'payee_for' => r\setup_field("payee's description", 'varchar 60'), 
    'data' => r\setup_field('info stored elsewhere, duplicated here for convenience (serialized array)', 'text tiny'), 
    'creator' => r\setup_field('user id of the creator', 'int 11'), 
    'created' => r\setup_field('Unixtime transaction was created', 'int 11'), 
  );
  $foreign_keys = r\foreign_key('payer') + r\foreign_key('payee') + r\foreign_key('creator');
  $indexes = r\index('payer') + r\index('payee');
  $schema['r_txs'] = r\setup_table('Record of all transactions in the region', $fields, 'xid', $foreign_keys, $indexes);

  // table r_shared_accounts
  $fields = array(
    'shared_uid' => r\setup_field('uid of the account being shared', 'int 11'),
    'shared_with' => r\setup_field('uid of a user that has access to that account', 'int 11'),
    'permission' => r\setup_field('what type of permission the shared_with user has on the shared_uid account', 'int tiny'),
  );
  $foreign_keys = r\foreign_key('shared_uid') + r\foreign_key('shared_with');
  $indexes = r\index('shared_uid') + r\index('shared_with');
  $schema['r_shared_accounts'] = r\setup_table('Who can manage which accounts, and how', $fields, NULL, $foreign_keys);
  
  // table r_employees
  $fields = array(
    'company' => r\setup_field('uid of company', 'int 11'),
    'employee' => r\setup_field('uid of employee', 'int 11'),
  );
  $foreign_keys = r\foreign_key('company') + r\foreign_key('employee');
  $indexes = r\index('company') + r\index('employee');
  $schema['r_employees'] = r\setup_table('Who is employed by whom', $fields, NULL, $foreign_keys);
  
  /*  
  r\setup_field($schema, 'r_area_codes', 'Area Code', 'telephone area code', 'char 3'); 
  r\setup_field($schema, 'r_area_codes', 'Region', 'state, province, or territory', 'varchar 24'); 
  
  r\setup_field($schema, 'r_credit_regions', 'Region', 'state or province', 'char 2');
  r\setup_field($schema, 'r_credit_regions', 'Credit Region', 'credit region id', 'char 2');
  */
  
  return $schema;
}

/**
 * Implements hook_schema_alter().
 */
function rcredits_schema_alter(&$schema) {
  $fields = array( // additional users fields
    'account_type' => r\setup_field('personal, commercial, non-profit (or government)', 'int tiny'),
    'federal_id' => r\setup_field('social security number or employer id number, for reporting', 'varchar 9'),
    'full_name' => r\setup_field('full name of the individual or entity', 'varchar 60'),
    'short_name' => r\setup_field('alphanumeric identifier with no spaces (internal)', 'varchar 60'),
    'phone' => r\setup_field('contact phone (no country code, no punctuation)', 'varchar 255'),
    'fax' => r\setup_field('fax number (no country code, no punctuation)', 'varchar 255'),
    'address' => r\setup_field('postal street address', 'varchar 60'),
    'city' => r\setup_field('municipality', 'varchar 60'),
    'state' => r\setup_field('full state/province name', 'varchar 60'), // varchar because char is deprecated
    'postal_code' => r\setup_field('contact postal code (no punctuation)', 'varchar 20'),
    'country' => r\setup_field('full country name', 'varchar 60'),
    'website' => r\setup_field('primary website', 'varchar 255'),
    'description' => r\setup_field('markup text describing the company (unused for personal accounts)', 'text medium'),
    'notes' => r\setup_field('miscellaneous notes about the user or the account', 'text medium'),
    'dob' => r\setup_field('date of birth, founding, or incorporation', 'int 11'),
    'credit_id' => r\setup_field('unique credit account identifier (8 characters for individuals)', 'varchar 9'),
    'rebate_percent' => r\setup_field('current rebate percentage (sales bonus is double)', 'numeric 4,3', 5),
    'demand' => r\setup_field('waiting to buy this much credit', 'numeric 9,2', 0),
    'min_balance' => r\setup_field('minimum balance (normally zero or less)', 'numeric 9,2', RCREDITS_MIN_BALANCE),
    'lost_card' => r\setup_field('user lost the account id card', 'int tiny', 0, '010'),
    'bank_account_number' => r\setup_field('official currency international bank account number', 'varchar 34'),
    'bank_account_name' => r\setup_field('name on US$ bank account -- usually the same as name', 'varchar 60'),
    'bank_account_verified' => r\setup_field('user has proven ownership of account', 'int tiny', 0, '010'),
  );
  $schema['users']['fields'] = (@$schema['users']['fields'] ?: array()) + $fields;
  
  $fields = array( // additional sms_user fields  
    'todo' => r\setup_field('waiting for confirmation to complete this operation', 'text medium'),
    'nonce' => r\setup_field('waiting for this nonce, for confirmation', 'varchar 10'),
  );
  $schema['sms_user']['fields'] = (@$schema['sms_user']['fields'] ?: array()) + $fields;
}
 
/**
 * Implements hook_uninstall().
 */
function rcredits_uninstall() {
  return; // don't do this, for a while (maybe ever)
  require_once 'rcredits.inc'; // Drupal bug. Uninstall needs this explicit.
  require_once 'rcredits-util.inc';

  $old_fields = array(
    'users' => u\ray('first_name last_name credit_name can_charge can_vote can_trade is_committed'),
  );
  r\make_fields('UNMAKE', $old_fields);
// (DON'T DELETE record!)  if ($who = variable_set('rcredits_community_uid')) db_query("DELETE FROM users WHERE uid = $who");

  db_query('DROP TABLE IF EXISTS ' . RCREDITS_TABLES . ',r_credit_tails');
}

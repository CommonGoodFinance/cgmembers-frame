<?php
/**
 * @file
 * rCredits
 *
 * A module for the rCredits financial system.
 * This module implements rCredits as an extension to Community Accounting (mcapi).
 *
 * PURPOSE:
 * Specifically, this module keeps track of and manages the following:
 * - balances: how much credit each participating individual or enterprise has been given,
 *             toward future goods and services
 * - credit lines: how much advance credit each participant has been (or is to be) granted, with
 *             the expectation that they will produce commensurate goods and services
 * - transactions: exchanges of credit for goods and services or for other types of credit
 * - credit issuance: how credit comes into being, before it is used in transactions
 *
 * CREDIT ISSUANCE:
 * In the rCredits system, credit is always issued as a Ricardian Contract
 * (see http://www.systemics.com/docs/ricardo/issuer/contract.html).
 * Initially, for the first 6 months, credit will be issued only by the Society to Benefit Everyone, Inc.,
 * for rebates, bonuses, and inflation adjustments. That credit will be backed by the membership
 * promise of each participant.
 *
 * After 6 months, we expect that Common Good Communities will be the sole issuers of rCredits.
 * At that time, all participants will exchange their rCredits one-for-one for new rCredits issued
 * jointly by themselves (that is, by their Common Good Community). The new contract will spell out
 * the financial relationship between Common Good Communities.
 *
 * STRUCTURE:
 * rCredits is the central engine
 * separate modules handle the various transaction channels: rSMS, rSmartphone, rBrowser, etc.
 * rIssue handles credit issuance.
 * 
 * a companion module, rDemocracy, handles participatory financial decision-making
 */

require_once 'rcredits.inc';
use rCredits as r;
use r\Utilities as u;

/**
 * Implements hook_permission().
 * Permission to transact through various interfaces is created here, 
 * so that those permissions can be granted during installation of the corresponding submodules.
 */
function rcredits_permission() {
  $permissions = array();
  r\permission($permissions, 'Member', t('Has an account, can access the member area and do "As If" transactions'));
  r\permission($permissions, 'Partner', t('Signed the membership agreement and donated'));
  r\permission($permissions, 'Steward', t('Is allowed to vote and is responsible for stewarding the Common Good Community'));
// make this a role  r\permission($permissions, 'rTrader', t('Is allowed to use rCredits for real'));
  r\permission($permissions, 'Charge others', t('Can charge customers without confirmation'));
//  r\permission($permissions, 'Transact via SMS', t('Transfer funds and get account information through the SMS Interface'));
//  r\permission($permissions, 'Transact via Web Browser', t('Transfer funds and get account information through the Web Browser Interface'));
//  r\permission($permissions, 'Transact via Smart Phone', t('Transfer funds and get account information through the Smart Interface'));
  return $permissions;
}

/**
 * Implements hook_help().
 */
function rcredits_help($path, $arg) {
  if ($path == 'admin/help#rcredits') {
    return t('If you have trouble using rCredits software during the development phase, call William Spademan for help: wspademan@RCredits.org.');
  }
}

/**
 * Implements hook_mail().
 */
function rcredits_im_send($key, &$message, $subs) {
  return FALSE; // can't send IMs yet

  $message['send'] = FALSE; // disable emailing, since we sent it my IM instead
  return TRUE;
} 

/**
 * Implements hook_mail().
 */
function rcredits_mail($key, &$message, $subs) {
    $language = $message['language'];
//    $data['user'] = \user_load($cid);
//    user_mail_tokens($variables, $data, compact('language')); // adds links for password reset and account cancelation
    
    if (rcredits_im_send($key, $message, $subs)) return; // If we can send by instant-message, do not send by email.
    $langcode = $language->language;
    $message['headers']['Content-Type'] = 'text/html; charset=UTF-8; format=flowed'; // default is plain text
    $message['subject'] = strtr($GLOBALS['email_subjects'][$key], $subs);
    $guts = strtr(file_get_contents(__DIR__ . R_TEMPLATE_DIR . "/$key.html"), $subs);
    $message['body'][] = str_replace('{BODY}', $guts, file_get_contents(__DIR__ . R_TEMPLATE_DIR . R_EMAIL_FRAME));

//    $message['subject'] = t('Notification from !site', $variables, compact('langcode'));
//    $message['body'][] = t("Dear !username\n\nThere is new content available on the site.", $variables, compact('langcode'));
    
}